// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`organism/Header/HeaderSP organism/Header/HeaderSP-snapshot 1`] = `
<HeaderSp>
  <HeaderSp__Container
    position="fixed"
  >
    <WithStyles(ForwardRef(AppBar))
      className="HeaderSp__Container-sc-q86ve5-0 kSAItC"
      position="fixed"
    >
      <ForwardRef(AppBar)
        className="HeaderSp__Container-sc-q86ve5-0 kSAItC"
        classes={
          Object {
            "colorDefault": "MuiAppBar-colorDefault",
            "colorInherit": "MuiAppBar-colorInherit",
            "colorPrimary": "MuiAppBar-colorPrimary",
            "colorSecondary": "MuiAppBar-colorSecondary",
            "colorTransparent": "MuiAppBar-colorTransparent",
            "positionAbsolute": "MuiAppBar-positionAbsolute",
            "positionFixed": "MuiAppBar-positionFixed",
            "positionRelative": "MuiAppBar-positionRelative",
            "positionStatic": "MuiAppBar-positionStatic",
            "positionSticky": "MuiAppBar-positionSticky",
            "root": "MuiAppBar-root",
          }
        }
        position="fixed"
      >
        <WithStyles(ForwardRef(Paper))
          className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary HeaderSp__Container-sc-q86ve5-0 kSAItC mui-fixed"
          component="header"
          elevation={4}
          square={true}
        >
          <ForwardRef(Paper)
            className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary HeaderSp__Container-sc-q86ve5-0 kSAItC mui-fixed"
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0",
                "elevation1": "MuiPaper-elevation1",
                "elevation10": "MuiPaper-elevation10",
                "elevation11": "MuiPaper-elevation11",
                "elevation12": "MuiPaper-elevation12",
                "elevation13": "MuiPaper-elevation13",
                "elevation14": "MuiPaper-elevation14",
                "elevation15": "MuiPaper-elevation15",
                "elevation16": "MuiPaper-elevation16",
                "elevation17": "MuiPaper-elevation17",
                "elevation18": "MuiPaper-elevation18",
                "elevation19": "MuiPaper-elevation19",
                "elevation2": "MuiPaper-elevation2",
                "elevation20": "MuiPaper-elevation20",
                "elevation21": "MuiPaper-elevation21",
                "elevation22": "MuiPaper-elevation22",
                "elevation23": "MuiPaper-elevation23",
                "elevation24": "MuiPaper-elevation24",
                "elevation3": "MuiPaper-elevation3",
                "elevation4": "MuiPaper-elevation4",
                "elevation5": "MuiPaper-elevation5",
                "elevation6": "MuiPaper-elevation6",
                "elevation7": "MuiPaper-elevation7",
                "elevation8": "MuiPaper-elevation8",
                "elevation9": "MuiPaper-elevation9",
                "outlined": "MuiPaper-outlined",
                "root": "MuiPaper-root",
                "rounded": "MuiPaper-rounded",
              }
            }
            component="header"
            elevation={4}
            square={true}
          >
            <header
              className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary HeaderSp__Container-sc-q86ve5-0 kSAItC mui-fixed MuiPaper-elevation4"
            >
              <HeaderSp__SpacedToolbar
                $isLoggedIn={false}
                variant="dense"
              >
                <WithStyles(ForwardRef(Toolbar))
                  className="HeaderSp__SpacedToolbar-sc-q86ve5-1 ibBOBU"
                  variant="dense"
                >
                  <ForwardRef(Toolbar)
                    className="HeaderSp__SpacedToolbar-sc-q86ve5-1 ibBOBU"
                    classes={
                      Object {
                        "dense": "MuiToolbar-dense",
                        "gutters": "MuiToolbar-gutters",
                        "regular": "MuiToolbar-regular",
                        "root": "MuiToolbar-root",
                      }
                    }
                    variant="dense"
                  >
                    <div
                      className="MuiToolbar-root MuiToolbar-dense HeaderSp__SpacedToolbar-sc-q86ve5-1 ibBOBU MuiToolbar-gutters"
                    >
                      <HeaderSp__PageName>
                        <div
                          className="HeaderSp__PageName-sc-q86ve5-2 iBFDsd"
                        >
                          Not Found
                        </div>
                      </HeaderSp__PageName>
                      <AvatarMenu
                        isSp={true}
                      >
                        <AvatarMenu__SpSpace>
                          <div
                            className="AvatarMenu__SpSpace-sc-1lm78z4-1 gtGkof"
                          />
                        </AvatarMenu__SpSpace>
                        <AvatarMenu__TextButton
                          onClick={[Function]}
                        >
                          <WithStyles(ForwardRef(Button))
                            className="AvatarMenu__TextButton-sc-1lm78z4-0 FDLip"
                            onClick={[Function]}
                          >
                            <ForwardRef(Button)
                              className="AvatarMenu__TextButton-sc-1lm78z4-0 FDLip"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              onClick={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root MuiButton-text AvatarMenu__TextButton-sc-1lm78z4-0 FDLip"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root MuiButton-text AvatarMenu__TextButton-sc-1lm78z4-0 FDLip"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root MuiButton-text AvatarMenu__TextButton-sc-1lm78z4-0 FDLip"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      <Avatar
                                        alt="Somebody"
                                        src="/static/images/avatar/1.jpg"
                                      >
                                        <WithStyles(ForwardRef(Avatar))
                                          alt="Somebody"
                                          style={
                                            Object {
                                              "height": 36,
                                              "width": 36,
                                            }
                                          }
                                        >
                                          <ForwardRef(Avatar)
                                            alt="Somebody"
                                            classes={
                                              Object {
                                                "circle": "MuiAvatar-circle",
                                                "circular": "MuiAvatar-circular",
                                                "colorDefault": "MuiAvatar-colorDefault",
                                                "fallback": "MuiAvatar-fallback",
                                                "img": "MuiAvatar-img",
                                                "root": "MuiAvatar-root",
                                                "rounded": "MuiAvatar-rounded",
                                                "square": "MuiAvatar-square",
                                              }
                                            }
                                            style={
                                              Object {
                                                "height": 36,
                                                "width": 36,
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiAvatar-root MuiAvatar-circular MuiAvatar-colorDefault"
                                              style={
                                                Object {
                                                  "height": 36,
                                                  "width": 36,
                                                }
                                              }
                                            >
                                              <ForwardRef(PersonIcon)
                                                className="MuiAvatar-fallback"
                                              >
                                                <WithStyles(ForwardRef(SvgIcon))
                                                  className="MuiAvatar-fallback"
                                                >
                                                  <ForwardRef(SvgIcon)
                                                    className="MuiAvatar-fallback"
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root MuiAvatar-fallback"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(PersonIcon)>
                                            </div>
                                          </ForwardRef(Avatar)>
                                        </WithStyles(ForwardRef(Avatar))>
                                      </Avatar>
                                    </span>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </AvatarMenu__TextButton>
                        <Popper
                          anchorEl={null}
                          placement="bottom-end"
                          setShow={[Function]}
                          show={false}
                        >
                          <Popper__Container
                            anchorEl={null}
                            open={false}
                            placement="bottom-end"
                            transition={true}
                          >
                            <ForwardRef(Popper)
                              anchorEl={null}
                              className="Popper__Container-sc-fo3olu-0 ibMCCu"
                              open={false}
                              placement="bottom-end"
                              transition={true}
                            />
                          </Popper__Container>
                        </Popper>
                      </AvatarMenu>
                    </div>
                  </ForwardRef(Toolbar)>
                </WithStyles(ForwardRef(Toolbar))>
              </HeaderSp__SpacedToolbar>
            </header>
          </ForwardRef(Paper)>
        </WithStyles(ForwardRef(Paper))>
      </ForwardRef(AppBar)>
    </WithStyles(ForwardRef(AppBar))>
  </HeaderSp__Container>
</HeaderSp>
`;

exports[`organism/Header/HeaderSP organism/Header/HeaderSP-snapshot 2`] = `
<HeaderSp
  isLoggedIn={true}
>
  <HeaderSp__Container
    position="fixed"
  >
    <WithStyles(ForwardRef(AppBar))
      className="HeaderSp__Container-sc-q86ve5-0 kSAItC"
      position="fixed"
    >
      <ForwardRef(AppBar)
        className="HeaderSp__Container-sc-q86ve5-0 kSAItC"
        classes={
          Object {
            "colorDefault": "MuiAppBar-colorDefault",
            "colorInherit": "MuiAppBar-colorInherit",
            "colorPrimary": "MuiAppBar-colorPrimary",
            "colorSecondary": "MuiAppBar-colorSecondary",
            "colorTransparent": "MuiAppBar-colorTransparent",
            "positionAbsolute": "MuiAppBar-positionAbsolute",
            "positionFixed": "MuiAppBar-positionFixed",
            "positionRelative": "MuiAppBar-positionRelative",
            "positionStatic": "MuiAppBar-positionStatic",
            "positionSticky": "MuiAppBar-positionSticky",
            "root": "MuiAppBar-root",
          }
        }
        position="fixed"
      >
        <WithStyles(ForwardRef(Paper))
          className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary HeaderSp__Container-sc-q86ve5-0 kSAItC mui-fixed"
          component="header"
          elevation={4}
          square={true}
        >
          <ForwardRef(Paper)
            className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary HeaderSp__Container-sc-q86ve5-0 kSAItC mui-fixed"
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0",
                "elevation1": "MuiPaper-elevation1",
                "elevation10": "MuiPaper-elevation10",
                "elevation11": "MuiPaper-elevation11",
                "elevation12": "MuiPaper-elevation12",
                "elevation13": "MuiPaper-elevation13",
                "elevation14": "MuiPaper-elevation14",
                "elevation15": "MuiPaper-elevation15",
                "elevation16": "MuiPaper-elevation16",
                "elevation17": "MuiPaper-elevation17",
                "elevation18": "MuiPaper-elevation18",
                "elevation19": "MuiPaper-elevation19",
                "elevation2": "MuiPaper-elevation2",
                "elevation20": "MuiPaper-elevation20",
                "elevation21": "MuiPaper-elevation21",
                "elevation22": "MuiPaper-elevation22",
                "elevation23": "MuiPaper-elevation23",
                "elevation24": "MuiPaper-elevation24",
                "elevation3": "MuiPaper-elevation3",
                "elevation4": "MuiPaper-elevation4",
                "elevation5": "MuiPaper-elevation5",
                "elevation6": "MuiPaper-elevation6",
                "elevation7": "MuiPaper-elevation7",
                "elevation8": "MuiPaper-elevation8",
                "elevation9": "MuiPaper-elevation9",
                "outlined": "MuiPaper-outlined",
                "root": "MuiPaper-root",
                "rounded": "MuiPaper-rounded",
              }
            }
            component="header"
            elevation={4}
            square={true}
          >
            <header
              className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary HeaderSp__Container-sc-q86ve5-0 kSAItC mui-fixed MuiPaper-elevation4"
            >
              <HeaderSp__SpacedToolbar
                $isLoggedIn={false}
                variant="dense"
              >
                <WithStyles(ForwardRef(Toolbar))
                  className="HeaderSp__SpacedToolbar-sc-q86ve5-1 ibBOBU"
                  variant="dense"
                >
                  <ForwardRef(Toolbar)
                    className="HeaderSp__SpacedToolbar-sc-q86ve5-1 ibBOBU"
                    classes={
                      Object {
                        "dense": "MuiToolbar-dense",
                        "gutters": "MuiToolbar-gutters",
                        "regular": "MuiToolbar-regular",
                        "root": "MuiToolbar-root",
                      }
                    }
                    variant="dense"
                  >
                    <div
                      className="MuiToolbar-root MuiToolbar-dense HeaderSp__SpacedToolbar-sc-q86ve5-1 ibBOBU MuiToolbar-gutters"
                    >
                      <HeaderSp__PageName>
                        <div
                          className="HeaderSp__PageName-sc-q86ve5-2 iBFDsd"
                        >
                          Not Found
                        </div>
                      </HeaderSp__PageName>
                      <AvatarMenu
                        isSp={true}
                      >
                        <AvatarMenu__SpSpace>
                          <div
                            className="AvatarMenu__SpSpace-sc-1lm78z4-1 gtGkof"
                          />
                        </AvatarMenu__SpSpace>
                        <AvatarMenu__TextButton
                          onClick={[Function]}
                        >
                          <WithStyles(ForwardRef(Button))
                            className="AvatarMenu__TextButton-sc-1lm78z4-0 FDLip"
                            onClick={[Function]}
                          >
                            <ForwardRef(Button)
                              className="AvatarMenu__TextButton-sc-1lm78z4-0 FDLip"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              onClick={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root MuiButton-text AvatarMenu__TextButton-sc-1lm78z4-0 FDLip"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root MuiButton-text AvatarMenu__TextButton-sc-1lm78z4-0 FDLip"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root MuiButton-text AvatarMenu__TextButton-sc-1lm78z4-0 FDLip"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      <Avatar
                                        alt="Somebody"
                                        src="/static/images/avatar/1.jpg"
                                      >
                                        <WithStyles(ForwardRef(Avatar))
                                          alt="Somebody"
                                          style={
                                            Object {
                                              "height": 36,
                                              "width": 36,
                                            }
                                          }
                                        >
                                          <ForwardRef(Avatar)
                                            alt="Somebody"
                                            classes={
                                              Object {
                                                "circle": "MuiAvatar-circle",
                                                "circular": "MuiAvatar-circular",
                                                "colorDefault": "MuiAvatar-colorDefault",
                                                "fallback": "MuiAvatar-fallback",
                                                "img": "MuiAvatar-img",
                                                "root": "MuiAvatar-root",
                                                "rounded": "MuiAvatar-rounded",
                                                "square": "MuiAvatar-square",
                                              }
                                            }
                                            style={
                                              Object {
                                                "height": 36,
                                                "width": 36,
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiAvatar-root MuiAvatar-circular MuiAvatar-colorDefault"
                                              style={
                                                Object {
                                                  "height": 36,
                                                  "width": 36,
                                                }
                                              }
                                            >
                                              <ForwardRef(PersonIcon)
                                                className="MuiAvatar-fallback"
                                              >
                                                <WithStyles(ForwardRef(SvgIcon))
                                                  className="MuiAvatar-fallback"
                                                >
                                                  <ForwardRef(SvgIcon)
                                                    className="MuiAvatar-fallback"
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root MuiAvatar-fallback"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(PersonIcon)>
                                            </div>
                                          </ForwardRef(Avatar)>
                                        </WithStyles(ForwardRef(Avatar))>
                                      </Avatar>
                                    </span>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </AvatarMenu__TextButton>
                        <Popper
                          anchorEl={
                            <button
                              class="MuiButtonBase-root MuiButton-root MuiButton-text AvatarMenu__TextButton-sc-1lm78z4-0 FDLip"
                              tabindex="0"
                              type="button"
                            >
                              <span
                                class="MuiButton-label"
                              >
                                <div
                                  class="MuiAvatar-root MuiAvatar-circular MuiAvatar-colorDefault"
                                  style="width: 36px; height: 36px;"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root MuiAvatar-fallback"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                    />
                                  </svg>
                                </div>
                              </span>
                              <span
                                class="MuiTouchRipple-root"
                              />
                            </button>
                          }
                          placement="bottom-end"
                          setShow={[Function]}
                          show={false}
                        >
                          <Popper__Container
                            anchorEl={
                              <button
                                class="MuiButtonBase-root MuiButton-root MuiButton-text AvatarMenu__TextButton-sc-1lm78z4-0 FDLip"
                                tabindex="0"
                                type="button"
                              >
                                <span
                                  class="MuiButton-label"
                                >
                                  <div
                                    class="MuiAvatar-root MuiAvatar-circular MuiAvatar-colorDefault"
                                    style="width: 36px; height: 36px;"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root MuiAvatar-fallback"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                      />
                                    </svg>
                                  </div>
                                </span>
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </button>
                            }
                            open={false}
                            placement="bottom-end"
                            transition={true}
                          >
                            <ForwardRef(Popper)
                              anchorEl={
                                <button
                                  class="MuiButtonBase-root MuiButton-root MuiButton-text AvatarMenu__TextButton-sc-1lm78z4-0 FDLip"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiButton-label"
                                  >
                                    <div
                                      class="MuiAvatar-root MuiAvatar-circular MuiAvatar-colorDefault"
                                      style="width: 36px; height: 36px;"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root MuiAvatar-fallback"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                        />
                                      </svg>
                                    </div>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              }
                              className="Popper__Container-sc-fo3olu-0 ibMCCu"
                              open={false}
                              placement="bottom-end"
                              transition={true}
                            />
                          </Popper__Container>
                        </Popper>
                      </AvatarMenu>
                    </div>
                  </ForwardRef(Toolbar)>
                </WithStyles(ForwardRef(Toolbar))>
              </HeaderSp__SpacedToolbar>
            </header>
          </ForwardRef(Paper)>
        </WithStyles(ForwardRef(Paper))>
      </ForwardRef(AppBar)>
    </WithStyles(ForwardRef(AppBar))>
  </HeaderSp__Container>
</HeaderSp>
`;
