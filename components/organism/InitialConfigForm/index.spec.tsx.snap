// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`organism/InitialConfigForm organism/InitialConfigForm-snapshot 1`] = `
<InitialConfigForm>
  <InitialConfigForm__Root>
    <div
      className="InitialConfigForm__Root-sc-13nmw88-0 bAFcMd"
    >
      <InitialConfigForm__Container>
        <section
          className="InitialConfigForm__Container-sc-13nmw88-1 dnLWaf"
        >
          <Heading
            type="sub"
            underline={true}
          >
            <Heading__sub
              variant="h2"
            >
              <WithStyles(ForwardRef(Typography))
                className="Heading__sub-sc-rckheo-0 ceEKfy"
                variant="h2"
              >
                <ForwardRef(Typography)
                  className="Heading__sub-sc-rckheo-0 ceEKfy"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  variant="h2"
                >
                  <h2
                    className="MuiTypography-root Heading__sub-sc-rckheo-0 ceEKfy MuiTypography-h2"
                  >
                    YPS初期設定
                  </h2>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </Heading__sub>
            <Heading__sub>
              <div
                className="Heading__sub-sc-rckheo-2 bYGhYI"
              />
            </Heading__sub>
          </Heading>
          <Heading
            type="description"
          >
            <Heading__description
              variant="subtitle1"
            >
              <WithStyles(ForwardRef(Typography))
                className="Heading__description-sc-rckheo-1 brjGSG"
                variant="subtitle1"
              >
                <ForwardRef(Typography)
                  className="Heading__description-sc-rckheo-1 brjGSG"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  variant="subtitle1"
                >
                  <h6
                    className="MuiTypography-root Heading__description-sc-rckheo-1 brjGSG MuiTypography-subtitle1"
                  >
                    <InitialConfigForm__Description>
                      <p
                        className="InitialConfigForm__Description-sc-13nmw88-3 bitznq"
                      >
                        YPSユーザーと店舗の設定を行います。
                        <br />
                        設定内容は後からでも変更できます。
                      </p>
                    </InitialConfigForm__Description>
                  </h6>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </Heading__description>
          </Heading>
          <InitialConfigForm__Items>
            <div
              className="InitialConfigForm__Items-sc-13nmw88-2 UALOe"
            >
              <FormUserType
                initialValue="admin"
                setter={[Function]}
              >
                <FormUserBase
                  definition="ユーザー種別"
                  item={
                    <Radio
                      groupName="USER_TYPE"
                      initialValue="admin"
                      options={
                        Array [
                          Object {
                            "label": "管理ユーザー",
                            "note": "店舗管理者・シフト管理者はこちら",
                            "value": "admin",
                          },
                          Object {
                            "label": "一般ユーザー",
                            "note": "従業員・アルバイトはこちら",
                            "value": "general",
                          },
                        ]
                      }
                      setter={[Function]}
                    />
                  }
                >
                  <FormUserBase__Container>
                    <div
                      className="FormUserBase__Container-sc-143288g-0 gaKKXv"
                    >
                      <FormUserBase__TitleWrapper>
                        <div
                          className="FormUserBase__TitleWrapper-sc-143288g-1 jSzBJn"
                        >
                          <FormUserBase__Title
                            $position="center"
                          >
                            <div
                              className="FormUserBase__Title-sc-143288g-2 dKTgsS"
                            >
                              ユーザー種別
                            </div>
                          </FormUserBase__Title>
                        </div>
                      </FormUserBase__TitleWrapper>
                      <Radio
                        groupName="USER_TYPE"
                        initialValue="admin"
                        options={
                          Array [
                            Object {
                              "label": "管理ユーザー",
                              "note": "店舗管理者・シフト管理者はこちら",
                              "value": "admin",
                            },
                            Object {
                              "label": "一般ユーザー",
                              "note": "従業員・アルバイトはこちら",
                              "value": "general",
                            },
                          ]
                        }
                        setter={[Function]}
                      >
                        <ForwardRef(RadioGroup)
                          arial-label="USER_TYPE"
                          name="USER_TYPE"
                          onChange={[Function]}
                          row={false}
                          value="admin"
                        >
                          <WithStyles(ForwardRef(FormGroup))
                            arial-label="USER_TYPE"
                            role="radiogroup"
                            row={false}
                          >
                            <ForwardRef(FormGroup)
                              arial-label="USER_TYPE"
                              classes={
                                Object {
                                  "root": "MuiFormGroup-root",
                                  "row": "MuiFormGroup-row",
                                }
                              }
                              role="radiogroup"
                              row={false}
                            >
                              <div
                                arial-label="USER_TYPE"
                                className="MuiFormGroup-root"
                                role="radiogroup"
                              >
                                <Radio__LabelContainer
                                  key="0"
                                >
                                  <div
                                    className="Radio__LabelContainer-sc-fteruh-0 hawhMd"
                                  >
                                    <WithStyles(ForwardRef(FormControlLabel))
                                      control={
                                        <WithStyles(ForwardRef(Radio))
                                          color="primary"
                                          size="small"
                                        />
                                      }
                                      disabled={false}
                                      label={
                                        <Radio__Label>
                                          管理ユーザー
                                        </Radio__Label>
                                      }
                                      value="admin"
                                    >
                                      <ForwardRef(FormControlLabel)
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "label": "MuiFormControlLabel-label",
                                            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                            "root": "MuiFormControlLabel-root",
                                          }
                                        }
                                        control={
                                          <WithStyles(ForwardRef(Radio))
                                            color="primary"
                                            size="small"
                                          />
                                        }
                                        disabled={false}
                                        label={
                                          <Radio__Label>
                                            管理ユーザー
                                          </Radio__Label>
                                        }
                                        value="admin"
                                      >
                                        <label
                                          className="MuiFormControlLabel-root"
                                        >
                                          <WithStyles(ForwardRef(Radio))
                                            color="primary"
                                            disabled={false}
                                            size="small"
                                            value="admin"
                                          >
                                            <ForwardRef(Radio)
                                              classes={
                                                Object {
                                                  "checked": "Mui-checked",
                                                  "colorPrimary": "MuiRadio-colorPrimary",
                                                  "colorSecondary": "MuiRadio-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "root": "MuiRadio-root",
                                                }
                                              }
                                              color="primary"
                                              disabled={false}
                                              size="small"
                                              value="admin"
                                            >
                                              <WithStyles(ForwardRef(SwitchBase))
                                                checked={true}
                                                checkedIcon={
                                                  <WithStyles(RadioButtonIcon)
                                                    checked={true}
                                                    fontSize="small"
                                                  />
                                                }
                                                classes={
                                                  Object {
                                                    "checked": "Mui-checked",
                                                    "disabled": "Mui-disabled",
                                                    "root": "MuiRadio-root MuiRadio-colorPrimary",
                                                  }
                                                }
                                                color="primary"
                                                disabled={false}
                                                icon={
                                                  <WithStyles(RadioButtonIcon)
                                                    fontSize="small"
                                                  />
                                                }
                                                name="USER_TYPE"
                                                onChange={[Function]}
                                                type="radio"
                                                value="admin"
                                              >
                                                <ForwardRef(SwitchBase)
                                                  checked={true}
                                                  checkedIcon={
                                                    <WithStyles(RadioButtonIcon)
                                                      checked={true}
                                                      fontSize="small"
                                                    />
                                                  }
                                                  classes={
                                                    Object {
                                                      "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                                      "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                                      "input": "PrivateSwitchBase-input-4",
                                                      "root": "PrivateSwitchBase-root-1 MuiRadio-root MuiRadio-colorPrimary",
                                                    }
                                                  }
                                                  color="primary"
                                                  disabled={false}
                                                  icon={
                                                    <WithStyles(RadioButtonIcon)
                                                      fontSize="small"
                                                    />
                                                  }
                                                  name="USER_TYPE"
                                                  onChange={[Function]}
                                                  type="radio"
                                                  value="admin"
                                                >
                                                  <WithStyles(ForwardRef(IconButton))
                                                    className="PrivateSwitchBase-root-1 MuiRadio-root MuiRadio-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                    color="primary"
                                                    component="span"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(IconButton)
                                                      className="PrivateSwitchBase-root-1 MuiRadio-root MuiRadio-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                          "label": "MuiIconButton-label",
                                                          "root": "MuiIconButton-root",
                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                        }
                                                      }
                                                      color="primary"
                                                      component="span"
                                                      disabled={false}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      tabIndex={null}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        centerRipple={true}
                                                        className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root MuiRadio-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                                                        component="span"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        tabIndex={null}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          centerRipple={true}
                                                          className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root MuiRadio-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="span"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          tabIndex={null}
                                                        >
                                                          <span
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root MuiRadio-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                                                            onBlur={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            tabIndex={null}
                                                          >
                                                            <span
                                                              className="MuiIconButton-label"
                                                            >
                                                              <input
                                                                checked={true}
                                                                className="PrivateSwitchBase-input-4"
                                                                disabled={false}
                                                                name="USER_TYPE"
                                                                onChange={[Function]}
                                                                type="radio"
                                                                value="admin"
                                                              />
                                                              <WithStyles(RadioButtonIcon)
                                                                checked={true}
                                                                fontSize="small"
                                                              >
                                                                <RadioButtonIcon
                                                                  checked={true}
                                                                  classes={
                                                                    Object {
                                                                      "checked": "PrivateRadioButtonIcon-checked-7",
                                                                      "layer": "PrivateRadioButtonIcon-layer-6",
                                                                      "root": "PrivateRadioButtonIcon-root-5",
                                                                    }
                                                                  }
                                                                  fontSize="small"
                                                                >
                                                                  <div
                                                                    className="PrivateRadioButtonIcon-root-5 PrivateRadioButtonIcon-checked-7"
                                                                  >
                                                                    <ForwardRef(RadioButtonUncheckedIcon)
                                                                      fontSize="small"
                                                                    >
                                                                      <WithStyles(ForwardRef(SvgIcon))
                                                                        fontSize="small"
                                                                      >
                                                                        <ForwardRef(SvgIcon)
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                          fontSize="small"
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                            focusable="false"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef(RadioButtonUncheckedIcon)>
                                                                    <ForwardRef(RadioButtonCheckedIcon)
                                                                      className="PrivateRadioButtonIcon-layer-6"
                                                                      fontSize="small"
                                                                    >
                                                                      <WithStyles(ForwardRef(SvgIcon))
                                                                        className="PrivateRadioButtonIcon-layer-6"
                                                                        fontSize="small"
                                                                      >
                                                                        <ForwardRef(SvgIcon)
                                                                          className="PrivateRadioButtonIcon-layer-6"
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                          fontSize="small"
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="MuiSvgIcon-root PrivateRadioButtonIcon-layer-6 MuiSvgIcon-fontSizeSmall"
                                                                            focusable="false"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef(RadioButtonCheckedIcon)>
                                                                  </div>
                                                                </RadioButtonIcon>
                                                              </WithStyles(RadioButtonIcon)>
                                                            </span>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </span>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(IconButton)>
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </ForwardRef(SwitchBase)>
                                              </WithStyles(ForwardRef(SwitchBase))>
                                            </ForwardRef(Radio)>
                                          </WithStyles(ForwardRef(Radio))>
                                          <WithStyles(ForwardRef(Typography))
                                            className="MuiFormControlLabel-label"
                                            component="span"
                                          >
                                            <ForwardRef(Typography)
                                              className="MuiFormControlLabel-label"
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              component="span"
                                            >
                                              <span
                                                className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                              >
                                                <Radio__Label>
                                                  <div
                                                    className="Radio__Label-sc-fteruh-1 kdAydk"
                                                  >
                                                    管理ユーザー
                                                  </div>
                                                </Radio__Label>
                                              </span>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </label>
                                      </ForwardRef(FormControlLabel)>
                                    </WithStyles(ForwardRef(FormControlLabel))>
                                    <Note>
                                      <WithStyles(ForwardRef(Tooltip))
                                        title="店舗管理者・シフト管理者はこちら"
                                      >
                                        <ForwardRef(Tooltip)
                                          classes={
                                            Object {
                                              "arrow": "MuiTooltip-arrow",
                                              "popper": "MuiTooltip-popper",
                                              "popperArrow": "MuiTooltip-popperArrow",
                                              "popperInteractive": "MuiTooltip-popperInteractive",
                                              "tooltip": "MuiTooltip-tooltip",
                                              "tooltipArrow": "MuiTooltip-tooltipArrow",
                                              "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                              "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                              "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                              "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                              "touch": "MuiTooltip-touch",
                                            }
                                          }
                                          title="店舗管理者・シフト管理者はこちら"
                                        >
                                          <WithStyles(ForwardRef(IconButton))
                                            aria-describedby={null}
                                            className=""
                                            disableRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseOver={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchStart={[Function]}
                                            size="small"
                                            style={
                                              Object {
                                                "backgroundColor": "transparent",
                                              }
                                            }
                                            title="店舗管理者・シフト管理者はこちら"
                                          >
                                            <ForwardRef(IconButton)
                                              aria-describedby={null}
                                              className=""
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                  "label": "MuiIconButton-label",
                                                  "root": "MuiIconButton-root",
                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                }
                                              }
                                              disableRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseOver={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchStart={[Function]}
                                              size="small"
                                              style={
                                                Object {
                                                  "backgroundColor": "transparent",
                                                }
                                              }
                                              title="店舗管理者・シフト管理者はこちら"
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                aria-describedby={null}
                                                centerRipple={true}
                                                className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseOver={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchStart={[Function]}
                                                style={
                                                  Object {
                                                    "backgroundColor": "transparent",
                                                  }
                                                }
                                                title="店舗管理者・シフト管理者はこちら"
                                              >
                                                <ForwardRef(ButtonBase)
                                                  aria-describedby={null}
                                                  centerRipple={true}
                                                  className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  disableRipple={true}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseOver={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchStart={[Function]}
                                                  style={
                                                    Object {
                                                      "backgroundColor": "transparent",
                                                    }
                                                  }
                                                  title="店舗管理者・シフト管理者はこちら"
                                                >
                                                  <button
                                                    aria-describedby={null}
                                                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseOver={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    style={
                                                      Object {
                                                        "backgroundColor": "transparent",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                    title="店舗管理者・シフト管理者はこちら"
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiIconButton-label"
                                                    >
                                                      <ForwardRef(HelpOutlineOutlinedIcon)>
                                                        <WithStyles(ForwardRef(SvgIcon))>
                                                          <ForwardRef(SvgIcon)
                                                            classes={
                                                              Object {
                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                "colorError": "MuiSvgIcon-colorError",
                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                "root": "MuiSvgIcon-root",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="MuiSvgIcon-root"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z"
                                                              />
                                                            </svg>
                                                          </ForwardRef(SvgIcon)>
                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                      </ForwardRef(HelpOutlineOutlinedIcon)>
                                                    </span>
                                                  </button>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(IconButton)>
                                          </WithStyles(ForwardRef(IconButton))>
                                          <ForwardRef(Popper)
                                            anchorEl={
                                              <button
                                                class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                style="background-color: transparent;"
                                                tabindex="0"
                                                title="店舗管理者・シフト管理者はこちら"
                                                type="button"
                                              >
                                                <span
                                                  class="MuiIconButton-label"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    class="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z"
                                                    />
                                                  </svg>
                                                </span>
                                              </button>
                                            }
                                            className="MuiTooltip-popper"
                                            id={null}
                                            open={false}
                                            placement="bottom"
                                            popperOptions={
                                              Object {
                                                "modifiers": Object {
                                                  "arrow": Object {
                                                    "element": null,
                                                    "enabled": false,
                                                  },
                                                },
                                              }
                                            }
                                            transition={true}
                                          />
                                        </ForwardRef(Tooltip)>
                                      </WithStyles(ForwardRef(Tooltip))>
                                    </Note>
                                  </div>
                                </Radio__LabelContainer>
                                <Radio__LabelContainer
                                  key="1"
                                >
                                  <div
                                    className="Radio__LabelContainer-sc-fteruh-0 hawhMd"
                                  >
                                    <WithStyles(ForwardRef(FormControlLabel))
                                      control={
                                        <WithStyles(ForwardRef(Radio))
                                          color="primary"
                                          size="small"
                                        />
                                      }
                                      disabled={false}
                                      label={
                                        <Radio__Label>
                                          一般ユーザー
                                        </Radio__Label>
                                      }
                                      value="general"
                                    >
                                      <ForwardRef(FormControlLabel)
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "label": "MuiFormControlLabel-label",
                                            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                            "root": "MuiFormControlLabel-root",
                                          }
                                        }
                                        control={
                                          <WithStyles(ForwardRef(Radio))
                                            color="primary"
                                            size="small"
                                          />
                                        }
                                        disabled={false}
                                        label={
                                          <Radio__Label>
                                            一般ユーザー
                                          </Radio__Label>
                                        }
                                        value="general"
                                      >
                                        <label
                                          className="MuiFormControlLabel-root"
                                        >
                                          <WithStyles(ForwardRef(Radio))
                                            color="primary"
                                            disabled={false}
                                            size="small"
                                            value="general"
                                          >
                                            <ForwardRef(Radio)
                                              classes={
                                                Object {
                                                  "checked": "Mui-checked",
                                                  "colorPrimary": "MuiRadio-colorPrimary",
                                                  "colorSecondary": "MuiRadio-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "root": "MuiRadio-root",
                                                }
                                              }
                                              color="primary"
                                              disabled={false}
                                              size="small"
                                              value="general"
                                            >
                                              <WithStyles(ForwardRef(SwitchBase))
                                                checked={false}
                                                checkedIcon={
                                                  <WithStyles(RadioButtonIcon)
                                                    checked={true}
                                                    fontSize="small"
                                                  />
                                                }
                                                classes={
                                                  Object {
                                                    "checked": "Mui-checked",
                                                    "disabled": "Mui-disabled",
                                                    "root": "MuiRadio-root MuiRadio-colorPrimary",
                                                  }
                                                }
                                                color="primary"
                                                disabled={false}
                                                icon={
                                                  <WithStyles(RadioButtonIcon)
                                                    fontSize="small"
                                                  />
                                                }
                                                name="USER_TYPE"
                                                onChange={[Function]}
                                                type="radio"
                                                value="general"
                                              >
                                                <ForwardRef(SwitchBase)
                                                  checked={false}
                                                  checkedIcon={
                                                    <WithStyles(RadioButtonIcon)
                                                      checked={true}
                                                      fontSize="small"
                                                    />
                                                  }
                                                  classes={
                                                    Object {
                                                      "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                                      "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                                      "input": "PrivateSwitchBase-input-4",
                                                      "root": "PrivateSwitchBase-root-1 MuiRadio-root MuiRadio-colorPrimary",
                                                    }
                                                  }
                                                  color="primary"
                                                  disabled={false}
                                                  icon={
                                                    <WithStyles(RadioButtonIcon)
                                                      fontSize="small"
                                                    />
                                                  }
                                                  name="USER_TYPE"
                                                  onChange={[Function]}
                                                  type="radio"
                                                  value="general"
                                                >
                                                  <WithStyles(ForwardRef(IconButton))
                                                    className="PrivateSwitchBase-root-1 MuiRadio-root MuiRadio-colorPrimary"
                                                    color="primary"
                                                    component="span"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(IconButton)
                                                      className="PrivateSwitchBase-root-1 MuiRadio-root MuiRadio-colorPrimary"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                          "label": "MuiIconButton-label",
                                                          "root": "MuiIconButton-root",
                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                        }
                                                      }
                                                      color="primary"
                                                      component="span"
                                                      disabled={false}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      tabIndex={null}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        centerRipple={true}
                                                        className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root MuiRadio-colorPrimary MuiIconButton-colorPrimary"
                                                        component="span"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        tabIndex={null}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          centerRipple={true}
                                                          className="MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root MuiRadio-colorPrimary MuiIconButton-colorPrimary"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="span"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          tabIndex={null}
                                                        >
                                                          <span
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiRadio-root MuiRadio-colorPrimary MuiIconButton-colorPrimary"
                                                            onBlur={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            tabIndex={null}
                                                          >
                                                            <span
                                                              className="MuiIconButton-label"
                                                            >
                                                              <input
                                                                checked={false}
                                                                className="PrivateSwitchBase-input-4"
                                                                disabled={false}
                                                                name="USER_TYPE"
                                                                onChange={[Function]}
                                                                type="radio"
                                                                value="general"
                                                              />
                                                              <WithStyles(RadioButtonIcon)
                                                                fontSize="small"
                                                              >
                                                                <RadioButtonIcon
                                                                  classes={
                                                                    Object {
                                                                      "checked": "PrivateRadioButtonIcon-checked-7",
                                                                      "layer": "PrivateRadioButtonIcon-layer-6",
                                                                      "root": "PrivateRadioButtonIcon-root-5",
                                                                    }
                                                                  }
                                                                  fontSize="small"
                                                                >
                                                                  <div
                                                                    className="PrivateRadioButtonIcon-root-5"
                                                                  >
                                                                    <ForwardRef(RadioButtonUncheckedIcon)
                                                                      fontSize="small"
                                                                    >
                                                                      <WithStyles(ForwardRef(SvgIcon))
                                                                        fontSize="small"
                                                                      >
                                                                        <ForwardRef(SvgIcon)
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                          fontSize="small"
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                            focusable="false"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef(RadioButtonUncheckedIcon)>
                                                                    <ForwardRef(RadioButtonCheckedIcon)
                                                                      className="PrivateRadioButtonIcon-layer-6"
                                                                      fontSize="small"
                                                                    >
                                                                      <WithStyles(ForwardRef(SvgIcon))
                                                                        className="PrivateRadioButtonIcon-layer-6"
                                                                        fontSize="small"
                                                                      >
                                                                        <ForwardRef(SvgIcon)
                                                                          className="PrivateRadioButtonIcon-layer-6"
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                          fontSize="small"
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="MuiSvgIcon-root PrivateRadioButtonIcon-layer-6 MuiSvgIcon-fontSizeSmall"
                                                                            focusable="false"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef(RadioButtonCheckedIcon)>
                                                                  </div>
                                                                </RadioButtonIcon>
                                                              </WithStyles(RadioButtonIcon)>
                                                            </span>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </span>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(IconButton)>
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </ForwardRef(SwitchBase)>
                                              </WithStyles(ForwardRef(SwitchBase))>
                                            </ForwardRef(Radio)>
                                          </WithStyles(ForwardRef(Radio))>
                                          <WithStyles(ForwardRef(Typography))
                                            className="MuiFormControlLabel-label"
                                            component="span"
                                          >
                                            <ForwardRef(Typography)
                                              className="MuiFormControlLabel-label"
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              component="span"
                                            >
                                              <span
                                                className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                              >
                                                <Radio__Label>
                                                  <div
                                                    className="Radio__Label-sc-fteruh-1 kdAydk"
                                                  >
                                                    一般ユーザー
                                                  </div>
                                                </Radio__Label>
                                              </span>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </label>
                                      </ForwardRef(FormControlLabel)>
                                    </WithStyles(ForwardRef(FormControlLabel))>
                                    <Note>
                                      <WithStyles(ForwardRef(Tooltip))
                                        title="従業員・アルバイトはこちら"
                                      >
                                        <ForwardRef(Tooltip)
                                          classes={
                                            Object {
                                              "arrow": "MuiTooltip-arrow",
                                              "popper": "MuiTooltip-popper",
                                              "popperArrow": "MuiTooltip-popperArrow",
                                              "popperInteractive": "MuiTooltip-popperInteractive",
                                              "tooltip": "MuiTooltip-tooltip",
                                              "tooltipArrow": "MuiTooltip-tooltipArrow",
                                              "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                              "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                              "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                              "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                              "touch": "MuiTooltip-touch",
                                            }
                                          }
                                          title="従業員・アルバイトはこちら"
                                        >
                                          <WithStyles(ForwardRef(IconButton))
                                            aria-describedby={null}
                                            className=""
                                            disableRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseOver={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchStart={[Function]}
                                            size="small"
                                            style={
                                              Object {
                                                "backgroundColor": "transparent",
                                              }
                                            }
                                            title="従業員・アルバイトはこちら"
                                          >
                                            <ForwardRef(IconButton)
                                              aria-describedby={null}
                                              className=""
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                  "label": "MuiIconButton-label",
                                                  "root": "MuiIconButton-root",
                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                }
                                              }
                                              disableRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseOver={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchStart={[Function]}
                                              size="small"
                                              style={
                                                Object {
                                                  "backgroundColor": "transparent",
                                                }
                                              }
                                              title="従業員・アルバイトはこちら"
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                aria-describedby={null}
                                                centerRipple={true}
                                                className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseOver={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchStart={[Function]}
                                                style={
                                                  Object {
                                                    "backgroundColor": "transparent",
                                                  }
                                                }
                                                title="従業員・アルバイトはこちら"
                                              >
                                                <ForwardRef(ButtonBase)
                                                  aria-describedby={null}
                                                  centerRipple={true}
                                                  className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  disableRipple={true}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseOver={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchStart={[Function]}
                                                  style={
                                                    Object {
                                                      "backgroundColor": "transparent",
                                                    }
                                                  }
                                                  title="従業員・アルバイトはこちら"
                                                >
                                                  <button
                                                    aria-describedby={null}
                                                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseOver={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    style={
                                                      Object {
                                                        "backgroundColor": "transparent",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                    title="従業員・アルバイトはこちら"
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiIconButton-label"
                                                    >
                                                      <ForwardRef(HelpOutlineOutlinedIcon)>
                                                        <WithStyles(ForwardRef(SvgIcon))>
                                                          <ForwardRef(SvgIcon)
                                                            classes={
                                                              Object {
                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                "colorError": "MuiSvgIcon-colorError",
                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                "root": "MuiSvgIcon-root",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="MuiSvgIcon-root"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z"
                                                              />
                                                            </svg>
                                                          </ForwardRef(SvgIcon)>
                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                      </ForwardRef(HelpOutlineOutlinedIcon)>
                                                    </span>
                                                  </button>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(IconButton)>
                                          </WithStyles(ForwardRef(IconButton))>
                                          <ForwardRef(Popper)
                                            anchorEl={
                                              <button
                                                class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                style="background-color: transparent;"
                                                tabindex="0"
                                                title="従業員・アルバイトはこちら"
                                                type="button"
                                              >
                                                <span
                                                  class="MuiIconButton-label"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    class="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z"
                                                    />
                                                  </svg>
                                                </span>
                                              </button>
                                            }
                                            className="MuiTooltip-popper"
                                            id={null}
                                            open={false}
                                            placement="bottom"
                                            popperOptions={
                                              Object {
                                                "modifiers": Object {
                                                  "arrow": Object {
                                                    "element": null,
                                                    "enabled": false,
                                                  },
                                                },
                                              }
                                            }
                                            transition={true}
                                          />
                                        </ForwardRef(Tooltip)>
                                      </WithStyles(ForwardRef(Tooltip))>
                                    </Note>
                                  </div>
                                </Radio__LabelContainer>
                              </div>
                            </ForwardRef(FormGroup)>
                          </WithStyles(ForwardRef(FormGroup))>
                        </ForwardRef(RadioGroup)>
                      </Radio>
                    </div>
                  </FormUserBase__Container>
                </FormUserBase>
              </FormUserType>
              <ForwardRef
                error={false}
                helperText="ユーザー名を入力してください"
              >
                <FormUserBase
                  definition="ユーザー名"
                  item={
                    <ForwardRef
                      defaultValue=""
                      error={false}
                      helperText="ユーザー名を入力してください"
                      maxLength={32}
                      placeholder="〇〇 XX"
                      required={false}
                    />
                  }
                >
                  <FormUserBase__Container>
                    <div
                      className="FormUserBase__Container-sc-143288g-0 gaKKXv"
                    >
                      <FormUserBase__TitleWrapper>
                        <div
                          className="FormUserBase__TitleWrapper-sc-143288g-1 jSzBJn"
                        >
                          <FormUserBase__Title
                            $position="center"
                          >
                            <div
                              className="FormUserBase__Title-sc-143288g-2 dKTgsS"
                            >
                              ユーザー名
                            </div>
                          </FormUserBase__Title>
                        </div>
                      </FormUserBase__TitleWrapper>
                      <ForwardRef
                        defaultValue=""
                        error={false}
                        helperText="ユーザー名を入力してください"
                        maxLength={32}
                        placeholder="〇〇 XX"
                        required={false}
                      >
                        <WithStyles(ForwardRef(TextField))
                          defaultValue=""
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          helperText={false}
                          inputProps={
                            Object {
                              "maxLength": 32,
                            }
                          }
                          inputRef={
                            Object {
                              "current": <input
                                aria-invalid="false"
                                class="MuiInputBase-input MuiInput-input"
                                maxlength="32"
                                placeholder="〇〇 XX"
                                type="text"
                                value=""
                              />,
                            }
                          }
                          placeholder="〇〇 XX"
                          required={false}
                        >
                          <ForwardRef(TextField)
                            classes={
                              Object {
                                "root": "MuiTextField-root",
                              }
                            }
                            defaultValue=""
                            disabled={false}
                            error={false}
                            fullWidth={true}
                            helperText={false}
                            inputProps={
                              Object {
                                "maxLength": 32,
                              }
                            }
                            inputRef={
                              Object {
                                "current": <input
                                  aria-invalid="false"
                                  class="MuiInputBase-input MuiInput-input"
                                  maxlength="32"
                                  placeholder="〇〇 XX"
                                  type="text"
                                  value=""
                                />,
                              }
                            }
                            placeholder="〇〇 XX"
                            required={false}
                          >
                            <WithStyles(ForwardRef(FormControl))
                              className="MuiTextField-root"
                              color="primary"
                              disabled={false}
                              error={false}
                              fullWidth={true}
                              required={false}
                              variant="standard"
                            >
                              <ForwardRef(FormControl)
                                className="MuiTextField-root"
                                classes={
                                  Object {
                                    "fullWidth": "MuiFormControl-fullWidth",
                                    "marginDense": "MuiFormControl-marginDense",
                                    "marginNormal": "MuiFormControl-marginNormal",
                                    "root": "MuiFormControl-root",
                                  }
                                }
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={true}
                                required={false}
                                variant="standard"
                              >
                                <div
                                  className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                >
                                  <WithStyles(ForwardRef(Input))
                                    autoFocus={false}
                                    defaultValue=""
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "maxLength": 32,
                                      }
                                    }
                                    inputRef={
                                      Object {
                                        "current": <input
                                          aria-invalid="false"
                                          class="MuiInputBase-input MuiInput-input"
                                          maxlength="32"
                                          placeholder="〇〇 XX"
                                          type="text"
                                          value=""
                                        />,
                                      }
                                    }
                                    multiline={false}
                                    placeholder="〇〇 XX"
                                  >
                                    <ForwardRef(Input)
                                      autoFocus={false}
                                      classes={
                                        Object {
                                          "colorSecondary": "MuiInput-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "focused": "Mui-focused",
                                          "formControl": "MuiInput-formControl",
                                          "fullWidth": "MuiInput-fullWidth",
                                          "input": "MuiInput-input",
                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                          "inputMultiline": "MuiInput-inputMultiline",
                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                          "marginDense": "MuiInput-marginDense",
                                          "multiline": "MuiInput-multiline",
                                          "root": "MuiInput-root",
                                          "underline": "MuiInput-underline",
                                        }
                                      }
                                      defaultValue=""
                                      fullWidth={true}
                                      inputProps={
                                        Object {
                                          "maxLength": 32,
                                        }
                                      }
                                      inputRef={
                                        Object {
                                          "current": <input
                                            aria-invalid="false"
                                            class="MuiInputBase-input MuiInput-input"
                                            maxlength="32"
                                            placeholder="〇〇 XX"
                                            type="text"
                                            value=""
                                          />,
                                        }
                                      }
                                      multiline={false}
                                      placeholder="〇〇 XX"
                                    >
                                      <WithStyles(ForwardRef(InputBase))
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root MuiInput-underline",
                                            "underline": null,
                                          }
                                        }
                                        defaultValue=""
                                        fullWidth={true}
                                        inputComponent="input"
                                        inputProps={
                                          Object {
                                            "maxLength": 32,
                                          }
                                        }
                                        inputRef={
                                          Object {
                                            "current": <input
                                              aria-invalid="false"
                                              class="MuiInputBase-input MuiInput-input"
                                              maxlength="32"
                                              placeholder="〇〇 XX"
                                              type="text"
                                              value=""
                                            />,
                                          }
                                        }
                                        multiline={false}
                                        placeholder="〇〇 XX"
                                        type="text"
                                      >
                                        <ForwardRef(InputBase)
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                              "adornedStart": "MuiInputBase-adornedStart",
                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled Mui-disabled",
                                              "error": "Mui-error Mui-error",
                                              "focused": "Mui-focused Mui-focused",
                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                              "input": "MuiInputBase-input MuiInput-input",
                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                            }
                                          }
                                          defaultValue=""
                                          fullWidth={true}
                                          inputComponent="input"
                                          inputProps={
                                            Object {
                                              "maxLength": 32,
                                            }
                                          }
                                          inputRef={
                                            Object {
                                              "current": <input
                                                aria-invalid="false"
                                                class="MuiInputBase-input MuiInput-input"
                                                maxlength="32"
                                                placeholder="〇〇 XX"
                                                type="text"
                                                value=""
                                              />,
                                            }
                                          }
                                          multiline={false}
                                          placeholder="〇〇 XX"
                                          type="text"
                                        >
                                          <div
                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                            onClick={[Function]}
                                          >
                                            <input
                                              aria-invalid={false}
                                              autoFocus={false}
                                              className="MuiInputBase-input MuiInput-input"
                                              defaultValue=""
                                              disabled={false}
                                              maxLength={32}
                                              onAnimationStart={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              placeholder="〇〇 XX"
                                              required={false}
                                              type="text"
                                            />
                                          </div>
                                        </ForwardRef(InputBase)>
                                      </WithStyles(ForwardRef(InputBase))>
                                    </ForwardRef(Input)>
                                  </WithStyles(ForwardRef(Input))>
                                </div>
                              </ForwardRef(FormControl)>
                            </WithStyles(ForwardRef(FormControl))>
                          </ForwardRef(TextField)>
                        </WithStyles(ForwardRef(TextField))>
                      </ForwardRef>
                    </div>
                  </FormUserBase__Container>
                </FormUserBase>
              </ForwardRef>
            </div>
          </InitialConfigForm__Items>
        </section>
      </InitialConfigForm__Container>
      <InitialConfigForm__Container>
        <section
          className="InitialConfigForm__Container-sc-13nmw88-1 dnLWaf"
        >
          <Heading
            type="sub"
            underline={true}
          >
            <Heading__sub
              variant="h2"
            >
              <WithStyles(ForwardRef(Typography))
                className="Heading__sub-sc-rckheo-0 ceEKfy"
                variant="h2"
              >
                <ForwardRef(Typography)
                  className="Heading__sub-sc-rckheo-0 ceEKfy"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  variant="h2"
                >
                  <h2
                    className="MuiTypography-root Heading__sub-sc-rckheo-0 ceEKfy MuiTypography-h2"
                  >
                    店舗情報設定
                  </h2>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </Heading__sub>
            <Heading__sub>
              <div
                className="Heading__sub-sc-rckheo-2 bYGhYI"
              />
            </Heading__sub>
          </Heading>
          <InitialConfigForm__Items>
            <div
              className="InitialConfigForm__Items-sc-13nmw88-2 UALOe"
            >
              <ForwardRef
                error={false}
                helperText="店舗名を入力してください"
              >
                <FormUserBase
                  definition="店舗名"
                  item={
                    <ForwardRef
                      defaultValue=""
                      error={false}
                      helperText="店舗名を入力してください"
                      maxLength={64}
                      placeholder="〇〇店"
                      required={false}
                    />
                  }
                >
                  <FormUserBase__Container>
                    <div
                      className="FormUserBase__Container-sc-143288g-0 gaKKXv"
                    >
                      <FormUserBase__TitleWrapper>
                        <div
                          className="FormUserBase__TitleWrapper-sc-143288g-1 jSzBJn"
                        >
                          <FormUserBase__Title
                            $position="center"
                          >
                            <div
                              className="FormUserBase__Title-sc-143288g-2 dKTgsS"
                            >
                              店舗名
                            </div>
                          </FormUserBase__Title>
                        </div>
                      </FormUserBase__TitleWrapper>
                      <ForwardRef
                        defaultValue=""
                        error={false}
                        helperText="店舗名を入力してください"
                        maxLength={64}
                        placeholder="〇〇店"
                        required={false}
                      >
                        <WithStyles(ForwardRef(TextField))
                          defaultValue=""
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          helperText={false}
                          inputProps={
                            Object {
                              "maxLength": 64,
                            }
                          }
                          inputRef={
                            Object {
                              "current": <input
                                aria-invalid="false"
                                class="MuiInputBase-input MuiInput-input"
                                maxlength="64"
                                placeholder="〇〇店"
                                type="text"
                                value=""
                              />,
                            }
                          }
                          placeholder="〇〇店"
                          required={false}
                        >
                          <ForwardRef(TextField)
                            classes={
                              Object {
                                "root": "MuiTextField-root",
                              }
                            }
                            defaultValue=""
                            disabled={false}
                            error={false}
                            fullWidth={true}
                            helperText={false}
                            inputProps={
                              Object {
                                "maxLength": 64,
                              }
                            }
                            inputRef={
                              Object {
                                "current": <input
                                  aria-invalid="false"
                                  class="MuiInputBase-input MuiInput-input"
                                  maxlength="64"
                                  placeholder="〇〇店"
                                  type="text"
                                  value=""
                                />,
                              }
                            }
                            placeholder="〇〇店"
                            required={false}
                          >
                            <WithStyles(ForwardRef(FormControl))
                              className="MuiTextField-root"
                              color="primary"
                              disabled={false}
                              error={false}
                              fullWidth={true}
                              required={false}
                              variant="standard"
                            >
                              <ForwardRef(FormControl)
                                className="MuiTextField-root"
                                classes={
                                  Object {
                                    "fullWidth": "MuiFormControl-fullWidth",
                                    "marginDense": "MuiFormControl-marginDense",
                                    "marginNormal": "MuiFormControl-marginNormal",
                                    "root": "MuiFormControl-root",
                                  }
                                }
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={true}
                                required={false}
                                variant="standard"
                              >
                                <div
                                  className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                >
                                  <WithStyles(ForwardRef(Input))
                                    autoFocus={false}
                                    defaultValue=""
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "maxLength": 64,
                                      }
                                    }
                                    inputRef={
                                      Object {
                                        "current": <input
                                          aria-invalid="false"
                                          class="MuiInputBase-input MuiInput-input"
                                          maxlength="64"
                                          placeholder="〇〇店"
                                          type="text"
                                          value=""
                                        />,
                                      }
                                    }
                                    multiline={false}
                                    placeholder="〇〇店"
                                  >
                                    <ForwardRef(Input)
                                      autoFocus={false}
                                      classes={
                                        Object {
                                          "colorSecondary": "MuiInput-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "focused": "Mui-focused",
                                          "formControl": "MuiInput-formControl",
                                          "fullWidth": "MuiInput-fullWidth",
                                          "input": "MuiInput-input",
                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                          "inputMultiline": "MuiInput-inputMultiline",
                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                          "marginDense": "MuiInput-marginDense",
                                          "multiline": "MuiInput-multiline",
                                          "root": "MuiInput-root",
                                          "underline": "MuiInput-underline",
                                        }
                                      }
                                      defaultValue=""
                                      fullWidth={true}
                                      inputProps={
                                        Object {
                                          "maxLength": 64,
                                        }
                                      }
                                      inputRef={
                                        Object {
                                          "current": <input
                                            aria-invalid="false"
                                            class="MuiInputBase-input MuiInput-input"
                                            maxlength="64"
                                            placeholder="〇〇店"
                                            type="text"
                                            value=""
                                          />,
                                        }
                                      }
                                      multiline={false}
                                      placeholder="〇〇店"
                                    >
                                      <WithStyles(ForwardRef(InputBase))
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root MuiInput-underline",
                                            "underline": null,
                                          }
                                        }
                                        defaultValue=""
                                        fullWidth={true}
                                        inputComponent="input"
                                        inputProps={
                                          Object {
                                            "maxLength": 64,
                                          }
                                        }
                                        inputRef={
                                          Object {
                                            "current": <input
                                              aria-invalid="false"
                                              class="MuiInputBase-input MuiInput-input"
                                              maxlength="64"
                                              placeholder="〇〇店"
                                              type="text"
                                              value=""
                                            />,
                                          }
                                        }
                                        multiline={false}
                                        placeholder="〇〇店"
                                        type="text"
                                      >
                                        <ForwardRef(InputBase)
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                              "adornedStart": "MuiInputBase-adornedStart",
                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled Mui-disabled",
                                              "error": "Mui-error Mui-error",
                                              "focused": "Mui-focused Mui-focused",
                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                              "input": "MuiInputBase-input MuiInput-input",
                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                            }
                                          }
                                          defaultValue=""
                                          fullWidth={true}
                                          inputComponent="input"
                                          inputProps={
                                            Object {
                                              "maxLength": 64,
                                            }
                                          }
                                          inputRef={
                                            Object {
                                              "current": <input
                                                aria-invalid="false"
                                                class="MuiInputBase-input MuiInput-input"
                                                maxlength="64"
                                                placeholder="〇〇店"
                                                type="text"
                                                value=""
                                              />,
                                            }
                                          }
                                          multiline={false}
                                          placeholder="〇〇店"
                                          type="text"
                                        >
                                          <div
                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                            onClick={[Function]}
                                          >
                                            <input
                                              aria-invalid={false}
                                              autoFocus={false}
                                              className="MuiInputBase-input MuiInput-input"
                                              defaultValue=""
                                              disabled={false}
                                              maxLength={64}
                                              onAnimationStart={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              placeholder="〇〇店"
                                              required={false}
                                              type="text"
                                            />
                                          </div>
                                        </ForwardRef(InputBase)>
                                      </WithStyles(ForwardRef(InputBase))>
                                    </ForwardRef(Input)>
                                  </WithStyles(ForwardRef(Input))>
                                </div>
                              </ForwardRef(FormControl)>
                            </WithStyles(ForwardRef(FormControl))>
                          </ForwardRef(TextField)>
                        </WithStyles(ForwardRef(TextField))>
                      </ForwardRef>
                    </div>
                  </FormUserBase__Container>
                </FormUserBase>
              </ForwardRef>
            </div>
          </InitialConfigForm__Items>
        </section>
      </InitialConfigForm__Container>
      <InitialConfigForm__Container>
        <section
          className="InitialConfigForm__Container-sc-13nmw88-1 dnLWaf"
        >
          <Heading
            type="sub"
            underline={true}
          >
            <Heading__sub
              variant="h2"
            >
              <WithStyles(ForwardRef(Typography))
                className="Heading__sub-sc-rckheo-0 ceEKfy"
                variant="h2"
              >
                <ForwardRef(Typography)
                  className="Heading__sub-sc-rckheo-0 ceEKfy"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  variant="h2"
                >
                  <h2
                    className="MuiTypography-root Heading__sub-sc-rckheo-0 ceEKfy MuiTypography-h2"
                  >
                    シフト設定
                  </h2>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </Heading__sub>
            <Heading__sub>
              <div
                className="Heading__sub-sc-rckheo-2 bYGhYI"
              />
            </Heading__sub>
          </Heading>
          <InitialConfigForm__Items>
            <div
              className="InitialConfigForm__Items-sc-13nmw88-2 UALOe"
            >
              <FormShiftRange
                endInitialValue={"2021-09-18T09:00:00.000Z"}
                endTimeSetter={[Function]}
                startInitialValue={"2021-09-18T00:00:00.000Z"}
                startTimeSetter={[Function]}
              >
                <FormUserBase
                  definition="シフト設定可能時間"
                  item={
                    <FormShiftRange__Wrapper>
                      <FormShiftRange__PickerContainer>
                        <PickerTime
                          initialTime={"2021-09-18T00:00:00.000Z"}
                          label="開始時間"
                          margin="none"
                          setter={[Function]}
                        />
                      </FormShiftRange__PickerContainer>
                      <FormShiftRange__Delimeter />
                      <FormShiftRange__PickerContainer>
                        <PickerTime
                          initialTime={"2021-09-18T09:00:00.000Z"}
                          label="終了時間"
                          margin="none"
                          setter={[Function]}
                        />
                      </FormShiftRange__PickerContainer>
                    </FormShiftRange__Wrapper>
                  }
                  position="bottom"
                >
                  <FormUserBase__Container>
                    <div
                      className="FormUserBase__Container-sc-143288g-0 gaKKXv"
                    >
                      <FormUserBase__TitleWrapper>
                        <div
                          className="FormUserBase__TitleWrapper-sc-143288g-1 jSzBJn"
                        >
                          <FormUserBase__Title
                            $position="bottom"
                          >
                            <div
                              className="FormUserBase__Title-sc-143288g-2 jRDmpS"
                            >
                              シフト設定可能時間
                            </div>
                          </FormUserBase__Title>
                        </div>
                      </FormUserBase__TitleWrapper>
                      <FormShiftRange__Wrapper>
                        <div
                          className="FormShiftRange__Wrapper-sc-1tj3d33-0 jwPmhw"
                        >
                          <FormShiftRange__PickerContainer>
                            <div
                              className="FormShiftRange__PickerContainer-sc-1tj3d33-1"
                            >
                              <PickerTime
                                initialTime={"2021-09-18T00:00:00.000Z"}
                                label="開始時間"
                                margin="none"
                                setter={[Function]}
                              >
                                <MuiPickersUtilsProvider
                                  utils={[Function]}
                                >
                                  <PickerWithState
                                    ampm={false}
                                    autoOk={true}
                                    error={false}
                                    fullWidth={true}
                                    inputVariant="standard"
                                    invalidDateMessage="Invalid Time Format"
                                    label="開始時間"
                                    margin="none"
                                    onChange={[Function]}
                                    openTo="hours"
                                    value={"2021-09-18T00:00:00.000Z"}
                                    variant="inline"
                                    views={
                                      Array [
                                        "hours",
                                        "minutes",
                                      ]
                                    }
                                  >
                                    <Wrapper
                                      DateInputProps={
                                        Object {
                                          "inputValue": "09:00",
                                          "openPicker": [Function],
                                          "validationError": "",
                                        }
                                      }
                                      InputComponent={[Function]}
                                      error={false}
                                      format="HH:mm"
                                      fullWidth={true}
                                      inputVariant="standard"
                                      label="開始時間"
                                      margin="none"
                                      onAccept={[Function]}
                                      onClear={[Function]}
                                      onDismiss={[Function]}
                                      onSetToday={[Function]}
                                      open={false}
                                      variant="inline"
                                    >
                                      <InlineWrapper
                                        DateInputProps={
                                          Object {
                                            "inputValue": "09:00",
                                            "openPicker": [Function],
                                            "validationError": "",
                                          }
                                        }
                                        InputComponent={[Function]}
                                        error={false}
                                        format="HH:mm"
                                        fullWidth={true}
                                        inputVariant="standard"
                                        label="開始時間"
                                        margin="none"
                                        onAccept={[Function]}
                                        onClear={[Function]}
                                        onDismiss={[Function]}
                                        onSetToday={[Function]}
                                        open={false}
                                      >
                                        <PureDateInput
                                          error={false}
                                          format="HH:mm"
                                          fullWidth={true}
                                          inputRef={
                                            Object {
                                              "current": <input
                                                aria-invalid="false"
                                                class="MuiInputBase-input MuiInput-input"
                                                readonly=""
                                                type="text"
                                                value="09:00"
                                              />,
                                            }
                                          }
                                          inputValue="09:00"
                                          inputVariant="standard"
                                          label="開始時間"
                                          margin="none"
                                          openPicker={[Function]}
                                          validationError=""
                                        >
                                          <WithStyles(ForwardRef(TextField))
                                            InputProps={
                                              Object {
                                                "readOnly": true,
                                              }
                                            }
                                            error={false}
                                            format="HH:mm"
                                            fullWidth={true}
                                            helperText=""
                                            inputRef={
                                              Object {
                                                "current": <input
                                                  aria-invalid="false"
                                                  class="MuiInputBase-input MuiInput-input"
                                                  readonly=""
                                                  type="text"
                                                  value="09:00"
                                                />,
                                              }
                                            }
                                            label="開始時間"
                                            margin="none"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            value="09:00"
                                            variant="standard"
                                          >
                                            <ForwardRef(TextField)
                                              InputProps={
                                                Object {
                                                  "readOnly": true,
                                                }
                                              }
                                              classes={
                                                Object {
                                                  "root": "MuiTextField-root",
                                                }
                                              }
                                              error={false}
                                              format="HH:mm"
                                              fullWidth={true}
                                              helperText=""
                                              inputRef={
                                                Object {
                                                  "current": <input
                                                    aria-invalid="false"
                                                    class="MuiInputBase-input MuiInput-input"
                                                    readonly=""
                                                    type="text"
                                                    value="09:00"
                                                  />,
                                                }
                                              }
                                              label="開始時間"
                                              margin="none"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              value="09:00"
                                              variant="standard"
                                            >
                                              <WithStyles(ForwardRef(FormControl))
                                                className="MuiTextField-root"
                                                color="primary"
                                                disabled={false}
                                                error={false}
                                                format="HH:mm"
                                                fullWidth={true}
                                                margin="none"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                required={false}
                                                variant="standard"
                                              >
                                                <ForwardRef(FormControl)
                                                  className="MuiTextField-root"
                                                  classes={
                                                    Object {
                                                      "fullWidth": "MuiFormControl-fullWidth",
                                                      "marginDense": "MuiFormControl-marginDense",
                                                      "marginNormal": "MuiFormControl-marginNormal",
                                                      "root": "MuiFormControl-root",
                                                    }
                                                  }
                                                  color="primary"
                                                  disabled={false}
                                                  error={false}
                                                  format="HH:mm"
                                                  fullWidth={true}
                                                  margin="none"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  required={false}
                                                  variant="standard"
                                                >
                                                  <div
                                                    className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                    format="HH:mm"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                  >
                                                    <WithStyles(ForwardRef(InputLabel))>
                                                      <ForwardRef(InputLabel)
                                                        classes={
                                                          Object {
                                                            "animated": "MuiInputLabel-animated",
                                                            "asterisk": "MuiInputLabel-asterisk",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "filled": "MuiInputLabel-filled",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInputLabel-formControl",
                                                            "marginDense": "MuiInputLabel-marginDense",
                                                            "outlined": "MuiInputLabel-outlined",
                                                            "required": "Mui-required",
                                                            "root": "MuiInputLabel-root",
                                                            "shrink": "MuiInputLabel-shrink",
                                                          }
                                                        }
                                                      >
                                                        <WithStyles(ForwardRef(FormLabel))
                                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                                                          classes={
                                                            Object {
                                                              "asterisk": "MuiInputLabel-asterisk",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "focused": "Mui-focused",
                                                              "required": "Mui-required",
                                                            }
                                                          }
                                                          data-shrink={true}
                                                        >
                                                          <ForwardRef(FormLabel)
                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                                                            classes={
                                                              Object {
                                                                "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                "disabled": "Mui-disabled Mui-disabled",
                                                                "error": "Mui-error Mui-error",
                                                                "filled": "MuiFormLabel-filled",
                                                                "focused": "Mui-focused Mui-focused",
                                                                "required": "Mui-required Mui-required",
                                                                "root": "MuiFormLabel-root",
                                                              }
                                                            }
                                                            data-shrink={true}
                                                          >
                                                            <label
                                                              className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiFormLabel-filled"
                                                              data-shrink={true}
                                                            >
                                                              開始時間
                                                            </label>
                                                          </ForwardRef(FormLabel)>
                                                        </WithStyles(ForwardRef(FormLabel))>
                                                      </ForwardRef(InputLabel)>
                                                    </WithStyles(ForwardRef(InputLabel))>
                                                    <WithStyles(ForwardRef(Input))
                                                      autoFocus={false}
                                                      fullWidth={true}
                                                      inputRef={
                                                        Object {
                                                          "current": <input
                                                            aria-invalid="false"
                                                            class="MuiInputBase-input MuiInput-input"
                                                            readonly=""
                                                            type="text"
                                                            value="09:00"
                                                          />,
                                                        }
                                                      }
                                                      multiline={false}
                                                      readOnly={true}
                                                      value="09:00"
                                                    >
                                                      <ForwardRef(Input)
                                                        autoFocus={false}
                                                        classes={
                                                          Object {
                                                            "colorSecondary": "MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInput-formControl",
                                                            "fullWidth": "MuiInput-fullWidth",
                                                            "input": "MuiInput-input",
                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInput-marginDense",
                                                            "multiline": "MuiInput-multiline",
                                                            "root": "MuiInput-root",
                                                            "underline": "MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={true}
                                                        inputRef={
                                                          Object {
                                                            "current": <input
                                                              aria-invalid="false"
                                                              class="MuiInputBase-input MuiInput-input"
                                                              readonly=""
                                                              type="text"
                                                              value="09:00"
                                                            />,
                                                          }
                                                        }
                                                        multiline={false}
                                                        readOnly={true}
                                                        value="09:00"
                                                      >
                                                        <WithStyles(ForwardRef(InputBase))
                                                          autoFocus={false}
                                                          classes={
                                                            Object {
                                                              "colorSecondary": "MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "focused": "Mui-focused",
                                                              "formControl": "MuiInput-formControl",
                                                              "fullWidth": "MuiInput-fullWidth",
                                                              "input": "MuiInput-input",
                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInput-marginDense",
                                                              "multiline": "MuiInput-multiline",
                                                              "root": "MuiInput-root MuiInput-underline",
                                                              "underline": null,
                                                            }
                                                          }
                                                          fullWidth={true}
                                                          inputComponent="input"
                                                          inputRef={
                                                            Object {
                                                              "current": <input
                                                                aria-invalid="false"
                                                                class="MuiInputBase-input MuiInput-input"
                                                                readonly=""
                                                                type="text"
                                                                value="09:00"
                                                              />,
                                                            }
                                                          }
                                                          multiline={false}
                                                          readOnly={true}
                                                          type="text"
                                                          value="09:00"
                                                        >
                                                          <ForwardRef(InputBase)
                                                            autoFocus={false}
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiInputBase-adornedEnd",
                                                                "adornedStart": "MuiInputBase-adornedStart",
                                                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                "disabled": "Mui-disabled Mui-disabled",
                                                                "error": "Mui-error Mui-error",
                                                                "focused": "Mui-focused Mui-focused",
                                                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                "input": "MuiInputBase-input MuiInput-input",
                                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            inputComponent="input"
                                                            inputRef={
                                                              Object {
                                                                "current": <input
                                                                  aria-invalid="false"
                                                                  class="MuiInputBase-input MuiInput-input"
                                                                  readonly=""
                                                                  type="text"
                                                                  value="09:00"
                                                                />,
                                                              }
                                                            }
                                                            multiline={false}
                                                            readOnly={true}
                                                            type="text"
                                                            value="09:00"
                                                          >
                                                            <div
                                                              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                              onClick={[Function]}
                                                            >
                                                              <input
                                                                aria-invalid={false}
                                                                autoFocus={false}
                                                                className="MuiInputBase-input MuiInput-input"
                                                                disabled={false}
                                                                onAnimationStart={[Function]}
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                readOnly={true}
                                                                required={false}
                                                                type="text"
                                                                value="09:00"
                                                              />
                                                            </div>
                                                          </ForwardRef(InputBase)>
                                                        </WithStyles(ForwardRef(InputBase))>
                                                      </ForwardRef(Input)>
                                                    </WithStyles(ForwardRef(Input))>
                                                  </div>
                                                </ForwardRef(FormControl)>
                                              </WithStyles(ForwardRef(FormControl))>
                                            </ForwardRef(TextField)>
                                          </WithStyles(ForwardRef(TextField))>
                                        </PureDateInput>
                                        <WithStyles(ForwardRef(Popover))
                                          anchorOrigin={
                                            Object {
                                              "horizontal": "center",
                                              "vertical": "bottom",
                                            }
                                          }
                                          onClose={[Function]}
                                          open={false}
                                          transformOrigin={
                                            Object {
                                              "horizontal": "center",
                                              "vertical": "top",
                                            }
                                          }
                                        >
                                          <ForwardRef(Popover)
                                            anchorOrigin={
                                              Object {
                                                "horizontal": "center",
                                                "vertical": "bottom",
                                              }
                                            }
                                            classes={
                                              Object {
                                                "paper": "MuiPopover-paper",
                                                "root": "MuiPopover-root",
                                              }
                                            }
                                            onClose={[Function]}
                                            open={false}
                                            transformOrigin={
                                              Object {
                                                "horizontal": "center",
                                                "vertical": "top",
                                              }
                                            }
                                          >
                                            <ForwardRef(Modal)
                                              BackdropProps={
                                                Object {
                                                  "invisible": true,
                                                }
                                              }
                                              className="MuiPopover-root"
                                              onClose={[Function]}
                                              open={false}
                                            />
                                          </ForwardRef(Popover)>
                                        </WithStyles(ForwardRef(Popover))>
                                      </InlineWrapper>
                                    </Wrapper>
                                  </PickerWithState>
                                </MuiPickersUtilsProvider>
                              </PickerTime>
                            </div>
                          </FormShiftRange__PickerContainer>
                          <FormShiftRange__Delimeter>
                            <div
                              className="FormShiftRange__Delimeter-sc-1tj3d33-2 wyyZC"
                            />
                          </FormShiftRange__Delimeter>
                          <FormShiftRange__PickerContainer>
                            <div
                              className="FormShiftRange__PickerContainer-sc-1tj3d33-1"
                            >
                              <PickerTime
                                initialTime={"2021-09-18T09:00:00.000Z"}
                                label="終了時間"
                                margin="none"
                                setter={[Function]}
                              >
                                <MuiPickersUtilsProvider
                                  utils={[Function]}
                                >
                                  <PickerWithState
                                    ampm={false}
                                    autoOk={true}
                                    error={false}
                                    fullWidth={true}
                                    inputVariant="standard"
                                    invalidDateMessage="Invalid Time Format"
                                    label="終了時間"
                                    margin="none"
                                    onChange={[Function]}
                                    openTo="hours"
                                    value={"2021-09-18T09:00:00.000Z"}
                                    variant="inline"
                                    views={
                                      Array [
                                        "hours",
                                        "minutes",
                                      ]
                                    }
                                  >
                                    <Wrapper
                                      DateInputProps={
                                        Object {
                                          "inputValue": "18:00",
                                          "openPicker": [Function],
                                          "validationError": "",
                                        }
                                      }
                                      InputComponent={[Function]}
                                      error={false}
                                      format="HH:mm"
                                      fullWidth={true}
                                      inputVariant="standard"
                                      label="終了時間"
                                      margin="none"
                                      onAccept={[Function]}
                                      onClear={[Function]}
                                      onDismiss={[Function]}
                                      onSetToday={[Function]}
                                      open={false}
                                      variant="inline"
                                    >
                                      <InlineWrapper
                                        DateInputProps={
                                          Object {
                                            "inputValue": "18:00",
                                            "openPicker": [Function],
                                            "validationError": "",
                                          }
                                        }
                                        InputComponent={[Function]}
                                        error={false}
                                        format="HH:mm"
                                        fullWidth={true}
                                        inputVariant="standard"
                                        label="終了時間"
                                        margin="none"
                                        onAccept={[Function]}
                                        onClear={[Function]}
                                        onDismiss={[Function]}
                                        onSetToday={[Function]}
                                        open={false}
                                      >
                                        <PureDateInput
                                          error={false}
                                          format="HH:mm"
                                          fullWidth={true}
                                          inputRef={
                                            Object {
                                              "current": <input
                                                aria-invalid="false"
                                                class="MuiInputBase-input MuiInput-input"
                                                readonly=""
                                                type="text"
                                                value="18:00"
                                              />,
                                            }
                                          }
                                          inputValue="18:00"
                                          inputVariant="standard"
                                          label="終了時間"
                                          margin="none"
                                          openPicker={[Function]}
                                          validationError=""
                                        >
                                          <WithStyles(ForwardRef(TextField))
                                            InputProps={
                                              Object {
                                                "readOnly": true,
                                              }
                                            }
                                            error={false}
                                            format="HH:mm"
                                            fullWidth={true}
                                            helperText=""
                                            inputRef={
                                              Object {
                                                "current": <input
                                                  aria-invalid="false"
                                                  class="MuiInputBase-input MuiInput-input"
                                                  readonly=""
                                                  type="text"
                                                  value="18:00"
                                                />,
                                              }
                                            }
                                            label="終了時間"
                                            margin="none"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            value="18:00"
                                            variant="standard"
                                          >
                                            <ForwardRef(TextField)
                                              InputProps={
                                                Object {
                                                  "readOnly": true,
                                                }
                                              }
                                              classes={
                                                Object {
                                                  "root": "MuiTextField-root",
                                                }
                                              }
                                              error={false}
                                              format="HH:mm"
                                              fullWidth={true}
                                              helperText=""
                                              inputRef={
                                                Object {
                                                  "current": <input
                                                    aria-invalid="false"
                                                    class="MuiInputBase-input MuiInput-input"
                                                    readonly=""
                                                    type="text"
                                                    value="18:00"
                                                  />,
                                                }
                                              }
                                              label="終了時間"
                                              margin="none"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              value="18:00"
                                              variant="standard"
                                            >
                                              <WithStyles(ForwardRef(FormControl))
                                                className="MuiTextField-root"
                                                color="primary"
                                                disabled={false}
                                                error={false}
                                                format="HH:mm"
                                                fullWidth={true}
                                                margin="none"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                required={false}
                                                variant="standard"
                                              >
                                                <ForwardRef(FormControl)
                                                  className="MuiTextField-root"
                                                  classes={
                                                    Object {
                                                      "fullWidth": "MuiFormControl-fullWidth",
                                                      "marginDense": "MuiFormControl-marginDense",
                                                      "marginNormal": "MuiFormControl-marginNormal",
                                                      "root": "MuiFormControl-root",
                                                    }
                                                  }
                                                  color="primary"
                                                  disabled={false}
                                                  error={false}
                                                  format="HH:mm"
                                                  fullWidth={true}
                                                  margin="none"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  required={false}
                                                  variant="standard"
                                                >
                                                  <div
                                                    className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                    format="HH:mm"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                  >
                                                    <WithStyles(ForwardRef(InputLabel))>
                                                      <ForwardRef(InputLabel)
                                                        classes={
                                                          Object {
                                                            "animated": "MuiInputLabel-animated",
                                                            "asterisk": "MuiInputLabel-asterisk",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "filled": "MuiInputLabel-filled",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInputLabel-formControl",
                                                            "marginDense": "MuiInputLabel-marginDense",
                                                            "outlined": "MuiInputLabel-outlined",
                                                            "required": "Mui-required",
                                                            "root": "MuiInputLabel-root",
                                                            "shrink": "MuiInputLabel-shrink",
                                                          }
                                                        }
                                                      >
                                                        <WithStyles(ForwardRef(FormLabel))
                                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                                                          classes={
                                                            Object {
                                                              "asterisk": "MuiInputLabel-asterisk",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "focused": "Mui-focused",
                                                              "required": "Mui-required",
                                                            }
                                                          }
                                                          data-shrink={true}
                                                        >
                                                          <ForwardRef(FormLabel)
                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                                                            classes={
                                                              Object {
                                                                "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                "disabled": "Mui-disabled Mui-disabled",
                                                                "error": "Mui-error Mui-error",
                                                                "filled": "MuiFormLabel-filled",
                                                                "focused": "Mui-focused Mui-focused",
                                                                "required": "Mui-required Mui-required",
                                                                "root": "MuiFormLabel-root",
                                                              }
                                                            }
                                                            data-shrink={true}
                                                          >
                                                            <label
                                                              className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiFormLabel-filled"
                                                              data-shrink={true}
                                                            >
                                                              終了時間
                                                            </label>
                                                          </ForwardRef(FormLabel)>
                                                        </WithStyles(ForwardRef(FormLabel))>
                                                      </ForwardRef(InputLabel)>
                                                    </WithStyles(ForwardRef(InputLabel))>
                                                    <WithStyles(ForwardRef(Input))
                                                      autoFocus={false}
                                                      fullWidth={true}
                                                      inputRef={
                                                        Object {
                                                          "current": <input
                                                            aria-invalid="false"
                                                            class="MuiInputBase-input MuiInput-input"
                                                            readonly=""
                                                            type="text"
                                                            value="18:00"
                                                          />,
                                                        }
                                                      }
                                                      multiline={false}
                                                      readOnly={true}
                                                      value="18:00"
                                                    >
                                                      <ForwardRef(Input)
                                                        autoFocus={false}
                                                        classes={
                                                          Object {
                                                            "colorSecondary": "MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInput-formControl",
                                                            "fullWidth": "MuiInput-fullWidth",
                                                            "input": "MuiInput-input",
                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInput-marginDense",
                                                            "multiline": "MuiInput-multiline",
                                                            "root": "MuiInput-root",
                                                            "underline": "MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={true}
                                                        inputRef={
                                                          Object {
                                                            "current": <input
                                                              aria-invalid="false"
                                                              class="MuiInputBase-input MuiInput-input"
                                                              readonly=""
                                                              type="text"
                                                              value="18:00"
                                                            />,
                                                          }
                                                        }
                                                        multiline={false}
                                                        readOnly={true}
                                                        value="18:00"
                                                      >
                                                        <WithStyles(ForwardRef(InputBase))
                                                          autoFocus={false}
                                                          classes={
                                                            Object {
                                                              "colorSecondary": "MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "focused": "Mui-focused",
                                                              "formControl": "MuiInput-formControl",
                                                              "fullWidth": "MuiInput-fullWidth",
                                                              "input": "MuiInput-input",
                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInput-marginDense",
                                                              "multiline": "MuiInput-multiline",
                                                              "root": "MuiInput-root MuiInput-underline",
                                                              "underline": null,
                                                            }
                                                          }
                                                          fullWidth={true}
                                                          inputComponent="input"
                                                          inputRef={
                                                            Object {
                                                              "current": <input
                                                                aria-invalid="false"
                                                                class="MuiInputBase-input MuiInput-input"
                                                                readonly=""
                                                                type="text"
                                                                value="18:00"
                                                              />,
                                                            }
                                                          }
                                                          multiline={false}
                                                          readOnly={true}
                                                          type="text"
                                                          value="18:00"
                                                        >
                                                          <ForwardRef(InputBase)
                                                            autoFocus={false}
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiInputBase-adornedEnd",
                                                                "adornedStart": "MuiInputBase-adornedStart",
                                                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                "disabled": "Mui-disabled Mui-disabled",
                                                                "error": "Mui-error Mui-error",
                                                                "focused": "Mui-focused Mui-focused",
                                                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                "input": "MuiInputBase-input MuiInput-input",
                                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            inputComponent="input"
                                                            inputRef={
                                                              Object {
                                                                "current": <input
                                                                  aria-invalid="false"
                                                                  class="MuiInputBase-input MuiInput-input"
                                                                  readonly=""
                                                                  type="text"
                                                                  value="18:00"
                                                                />,
                                                              }
                                                            }
                                                            multiline={false}
                                                            readOnly={true}
                                                            type="text"
                                                            value="18:00"
                                                          >
                                                            <div
                                                              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                              onClick={[Function]}
                                                            >
                                                              <input
                                                                aria-invalid={false}
                                                                autoFocus={false}
                                                                className="MuiInputBase-input MuiInput-input"
                                                                disabled={false}
                                                                onAnimationStart={[Function]}
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                readOnly={true}
                                                                required={false}
                                                                type="text"
                                                                value="18:00"
                                                              />
                                                            </div>
                                                          </ForwardRef(InputBase)>
                                                        </WithStyles(ForwardRef(InputBase))>
                                                      </ForwardRef(Input)>
                                                    </WithStyles(ForwardRef(Input))>
                                                  </div>
                                                </ForwardRef(FormControl)>
                                              </WithStyles(ForwardRef(FormControl))>
                                            </ForwardRef(TextField)>
                                          </WithStyles(ForwardRef(TextField))>
                                        </PureDateInput>
                                        <WithStyles(ForwardRef(Popover))
                                          anchorOrigin={
                                            Object {
                                              "horizontal": "center",
                                              "vertical": "bottom",
                                            }
                                          }
                                          onClose={[Function]}
                                          open={false}
                                          transformOrigin={
                                            Object {
                                              "horizontal": "center",
                                              "vertical": "top",
                                            }
                                          }
                                        >
                                          <ForwardRef(Popover)
                                            anchorOrigin={
                                              Object {
                                                "horizontal": "center",
                                                "vertical": "bottom",
                                              }
                                            }
                                            classes={
                                              Object {
                                                "paper": "MuiPopover-paper",
                                                "root": "MuiPopover-root",
                                              }
                                            }
                                            onClose={[Function]}
                                            open={false}
                                            transformOrigin={
                                              Object {
                                                "horizontal": "center",
                                                "vertical": "top",
                                              }
                                            }
                                          >
                                            <ForwardRef(Modal)
                                              BackdropProps={
                                                Object {
                                                  "invisible": true,
                                                }
                                              }
                                              className="MuiPopover-root"
                                              onClose={[Function]}
                                              open={false}
                                            />
                                          </ForwardRef(Popover)>
                                        </WithStyles(ForwardRef(Popover))>
                                      </InlineWrapper>
                                    </Wrapper>
                                  </PickerWithState>
                                </MuiPickersUtilsProvider>
                              </PickerTime>
                            </div>
                          </FormShiftRange__PickerContainer>
                        </div>
                      </FormShiftRange__Wrapper>
                    </div>
                  </FormUserBase__Container>
                </FormUserBase>
              </FormShiftRange>
              <FormTimeUnit
                initialValue="5"
                setter={[Function]}
              >
                <FormUserBase
                  definition="シフト作成時間単位"
                  item={
                    <FormTimeUnit__Container>
                      <Selectbox
                        initialValue="5"
                        options={
                          Array [
                            Object {
                              "label": "5分毎",
                              "value": "5",
                            },
                            Object {
                              "label": "10分毎",
                              "value": "10",
                            },
                            Object {
                              "label": "15分毎",
                              "value": "15",
                            },
                            Object {
                              "label": "20分毎",
                              "value": "20",
                            },
                            Object {
                              "label": "30分毎",
                              "value": "30",
                            },
                          ]
                        }
                        setter={[Function]}
                      />
                    </FormTimeUnit__Container>
                  }
                >
                  <FormUserBase__Container>
                    <div
                      className="FormUserBase__Container-sc-143288g-0 gaKKXv"
                    >
                      <FormUserBase__TitleWrapper>
                        <div
                          className="FormUserBase__TitleWrapper-sc-143288g-1 jSzBJn"
                        >
                          <FormUserBase__Title
                            $position="center"
                          >
                            <div
                              className="FormUserBase__Title-sc-143288g-2 dKTgsS"
                            >
                              シフト作成時間単位
                            </div>
                          </FormUserBase__Title>
                        </div>
                      </FormUserBase__TitleWrapper>
                      <FormTimeUnit__Container>
                        <div
                          className="FormTimeUnit__Container-sc-vtem8n-0 gxyObG"
                        >
                          <Selectbox
                            initialValue="5"
                            options={
                              Array [
                                Object {
                                  "label": "5分毎",
                                  "value": "5",
                                },
                                Object {
                                  "label": "10分毎",
                                  "value": "10",
                                },
                                Object {
                                  "label": "15分毎",
                                  "value": "15",
                                },
                                Object {
                                  "label": "20分毎",
                                  "value": "20",
                                },
                                Object {
                                  "label": "30分毎",
                                  "value": "30",
                                },
                              ]
                            }
                            setter={[Function]}
                          >
                            <WithStyles(ForwardRef(FormControl))
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <ForwardRef(FormControl)
                                classes={
                                  Object {
                                    "fullWidth": "MuiFormControl-fullWidth",
                                    "marginDense": "MuiFormControl-marginDense",
                                    "marginNormal": "MuiFormControl-marginNormal",
                                    "root": "MuiFormControl-root",
                                  }
                                }
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <div
                                  className="MuiFormControl-root"
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <WithStyles(ForwardRef(Select))
                                    displayEmpty={true}
                                    onChange={[Function]}
                                    value="5"
                                    variant="standard"
                                  >
                                    <ForwardRef(Select)
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "filled": "MuiSelect-filled",
                                          "icon": "MuiSelect-icon",
                                          "iconFilled": "MuiSelect-iconFilled",
                                          "iconOpen": "MuiSelect-iconOpen",
                                          "iconOutlined": "MuiSelect-iconOutlined",
                                          "nativeInput": "MuiSelect-nativeInput",
                                          "outlined": "MuiSelect-outlined",
                                          "root": "MuiSelect-root",
                                          "select": "MuiSelect-select",
                                          "selectMenu": "MuiSelect-selectMenu",
                                        }
                                      }
                                      displayEmpty={true}
                                      onChange={[Function]}
                                      value="5"
                                      variant="standard"
                                    >
                                      <WithStyles(ForwardRef(Input))
                                        inputComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "IconComponent": [Function],
                                              "MenuProps": [Function],
                                              "SelectDisplayProps": [Function],
                                              "aria-label": [Function],
                                              "autoFocus": [Function],
                                              "autoWidth": [Function],
                                              "children": [Function],
                                              "className": [Function],
                                              "classes": [Function],
                                              "defaultValue": [Function],
                                              "disabled": [Function],
                                              "displayEmpty": [Function],
                                              "inputRef": [Function],
                                              "labelId": [Function],
                                              "multiple": [Function],
                                              "name": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onClose": [Function],
                                              "onFocus": [Function],
                                              "onOpen": [Function],
                                              "open": [Function],
                                              "readOnly": [Function],
                                              "renderValue": [Function],
                                              "tabIndex": [Function],
                                              "type": [Function],
                                              "value": [Function],
                                              "variant": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        inputProps={
                                          Object {
                                            "IconComponent": Object {
                                              "$$typeof": Symbol(react.memo),
                                              "compare": null,
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                            },
                                            "MenuProps": undefined,
                                            "SelectDisplayProps": Object {
                                              "id": undefined,
                                            },
                                            "autoWidth": false,
                                            "children": Array [
                                              <WithStyles(ForwardRef(MenuItem))
                                                value="5"
                                              >
                                                5分毎
                                              </WithStyles(ForwardRef(MenuItem))>,
                                              <WithStyles(ForwardRef(MenuItem))
                                                value="10"
                                              >
                                                10分毎
                                              </WithStyles(ForwardRef(MenuItem))>,
                                              <WithStyles(ForwardRef(MenuItem))
                                                value="15"
                                              >
                                                15分毎
                                              </WithStyles(ForwardRef(MenuItem))>,
                                              <WithStyles(ForwardRef(MenuItem))
                                                value="20"
                                              >
                                                20分毎
                                              </WithStyles(ForwardRef(MenuItem))>,
                                              <WithStyles(ForwardRef(MenuItem))
                                                value="30"
                                              >
                                                30分毎
                                              </WithStyles(ForwardRef(MenuItem))>,
                                            ],
                                            "classes": Object {
                                              "disabled": "Mui-disabled",
                                              "filled": "MuiSelect-filled",
                                              "icon": "MuiSelect-icon",
                                              "iconFilled": "MuiSelect-iconFilled",
                                              "iconOpen": "MuiSelect-iconOpen",
                                              "iconOutlined": "MuiSelect-iconOutlined",
                                              "nativeInput": "MuiSelect-nativeInput",
                                              "outlined": "MuiSelect-outlined",
                                              "root": "MuiSelect-root",
                                              "select": "MuiSelect-select",
                                              "selectMenu": "MuiSelect-selectMenu",
                                            },
                                            "displayEmpty": true,
                                            "labelId": undefined,
                                            "multiple": false,
                                            "onClose": undefined,
                                            "onOpen": undefined,
                                            "open": undefined,
                                            "renderValue": undefined,
                                            "type": undefined,
                                            "variant": "standard",
                                          }
                                        }
                                        onChange={[Function]}
                                        value="5"
                                      >
                                        <ForwardRef(Input)
                                          classes={
                                            Object {
                                              "colorSecondary": "MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInput-formControl",
                                              "fullWidth": "MuiInput-fullWidth",
                                              "input": "MuiInput-input",
                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInput-marginDense",
                                              "multiline": "MuiInput-multiline",
                                              "root": "MuiInput-root",
                                              "underline": "MuiInput-underline",
                                            }
                                          }
                                          inputComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "IconComponent": [Function],
                                                "MenuProps": [Function],
                                                "SelectDisplayProps": [Function],
                                                "aria-label": [Function],
                                                "autoFocus": [Function],
                                                "autoWidth": [Function],
                                                "children": [Function],
                                                "className": [Function],
                                                "classes": [Function],
                                                "defaultValue": [Function],
                                                "disabled": [Function],
                                                "displayEmpty": [Function],
                                                "inputRef": [Function],
                                                "labelId": [Function],
                                                "multiple": [Function],
                                                "name": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onClose": [Function],
                                                "onFocus": [Function],
                                                "onOpen": [Function],
                                                "open": [Function],
                                                "readOnly": [Function],
                                                "renderValue": [Function],
                                                "tabIndex": [Function],
                                                "type": [Function],
                                                "value": [Function],
                                                "variant": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          inputProps={
                                            Object {
                                              "IconComponent": Object {
                                                "$$typeof": Symbol(react.memo),
                                                "compare": null,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                              },
                                              "MenuProps": undefined,
                                              "SelectDisplayProps": Object {
                                                "id": undefined,
                                              },
                                              "autoWidth": false,
                                              "children": Array [
                                                <WithStyles(ForwardRef(MenuItem))
                                                  value="5"
                                                >
                                                  5分毎
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                <WithStyles(ForwardRef(MenuItem))
                                                  value="10"
                                                >
                                                  10分毎
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                <WithStyles(ForwardRef(MenuItem))
                                                  value="15"
                                                >
                                                  15分毎
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                <WithStyles(ForwardRef(MenuItem))
                                                  value="20"
                                                >
                                                  20分毎
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                <WithStyles(ForwardRef(MenuItem))
                                                  value="30"
                                                >
                                                  30分毎
                                                </WithStyles(ForwardRef(MenuItem))>,
                                              ],
                                              "classes": Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiSelect-filled",
                                                "icon": "MuiSelect-icon",
                                                "iconFilled": "MuiSelect-iconFilled",
                                                "iconOpen": "MuiSelect-iconOpen",
                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                "nativeInput": "MuiSelect-nativeInput",
                                                "outlined": "MuiSelect-outlined",
                                                "root": "MuiSelect-root",
                                                "select": "MuiSelect-select",
                                                "selectMenu": "MuiSelect-selectMenu",
                                              },
                                              "displayEmpty": true,
                                              "labelId": undefined,
                                              "multiple": false,
                                              "onClose": undefined,
                                              "onOpen": undefined,
                                              "open": undefined,
                                              "renderValue": undefined,
                                              "type": undefined,
                                              "variant": "standard",
                                            }
                                          }
                                          onChange={[Function]}
                                          value="5"
                                        >
                                          <WithStyles(ForwardRef(InputBase))
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root MuiInput-underline",
                                                "underline": null,
                                              }
                                            }
                                            fullWidth={false}
                                            inputComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "IconComponent": [Function],
                                                  "MenuProps": [Function],
                                                  "SelectDisplayProps": [Function],
                                                  "aria-label": [Function],
                                                  "autoFocus": [Function],
                                                  "autoWidth": [Function],
                                                  "children": [Function],
                                                  "className": [Function],
                                                  "classes": [Function],
                                                  "defaultValue": [Function],
                                                  "disabled": [Function],
                                                  "displayEmpty": [Function],
                                                  "inputRef": [Function],
                                                  "labelId": [Function],
                                                  "multiple": [Function],
                                                  "name": [Function],
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "onClose": [Function],
                                                  "onFocus": [Function],
                                                  "onOpen": [Function],
                                                  "open": [Function],
                                                  "readOnly": [Function],
                                                  "renderValue": [Function],
                                                  "tabIndex": [Function],
                                                  "type": [Function],
                                                  "value": [Function],
                                                  "variant": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            inputProps={
                                              Object {
                                                "IconComponent": Object {
                                                  "$$typeof": Symbol(react.memo),
                                                  "compare": null,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                },
                                                "MenuProps": undefined,
                                                "SelectDisplayProps": Object {
                                                  "id": undefined,
                                                },
                                                "autoWidth": false,
                                                "children": Array [
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value="5"
                                                  >
                                                    5分毎
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value="10"
                                                  >
                                                    10分毎
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value="15"
                                                  >
                                                    15分毎
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value="20"
                                                  >
                                                    20分毎
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value="30"
                                                  >
                                                    30分毎
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                ],
                                                "classes": Object {
                                                  "disabled": "Mui-disabled",
                                                  "filled": "MuiSelect-filled",
                                                  "icon": "MuiSelect-icon",
                                                  "iconFilled": "MuiSelect-iconFilled",
                                                  "iconOpen": "MuiSelect-iconOpen",
                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                  "nativeInput": "MuiSelect-nativeInput",
                                                  "outlined": "MuiSelect-outlined",
                                                  "root": "MuiSelect-root",
                                                  "select": "MuiSelect-select",
                                                  "selectMenu": "MuiSelect-selectMenu",
                                                },
                                                "displayEmpty": true,
                                                "labelId": undefined,
                                                "multiple": false,
                                                "onClose": undefined,
                                                "onOpen": undefined,
                                                "open": undefined,
                                                "renderValue": undefined,
                                                "type": undefined,
                                                "variant": "standard",
                                              }
                                            }
                                            multiline={false}
                                            onChange={[Function]}
                                            type="text"
                                            value="5"
                                          >
                                            <ForwardRef(InputBase)
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled Mui-disabled",
                                                  "error": "Mui-error Mui-error",
                                                  "focused": "Mui-focused Mui-focused",
                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                  "input": "MuiInputBase-input MuiInput-input",
                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                }
                                              }
                                              fullWidth={false}
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "MenuProps": [Function],
                                                    "SelectDisplayProps": [Function],
                                                    "aria-label": [Function],
                                                    "autoFocus": [Function],
                                                    "autoWidth": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "defaultValue": [Function],
                                                    "disabled": [Function],
                                                    "displayEmpty": [Function],
                                                    "inputRef": [Function],
                                                    "labelId": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onClose": [Function],
                                                    "onFocus": [Function],
                                                    "onOpen": [Function],
                                                    "open": [Function],
                                                    "readOnly": [Function],
                                                    "renderValue": [Function],
                                                    "tabIndex": [Function],
                                                    "type": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "MenuProps": undefined,
                                                  "SelectDisplayProps": Object {
                                                    "id": undefined,
                                                  },
                                                  "autoWidth": false,
                                                  "children": Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value="5"
                                                    >
                                                      5分毎
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value="10"
                                                    >
                                                      10分毎
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value="15"
                                                    >
                                                      15分毎
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value="20"
                                                    >
                                                      20分毎
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value="30"
                                                    >
                                                      30分毎
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiSelect-filled",
                                                    "icon": "MuiSelect-icon",
                                                    "iconFilled": "MuiSelect-iconFilled",
                                                    "iconOpen": "MuiSelect-iconOpen",
                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                    "nativeInput": "MuiSelect-nativeInput",
                                                    "outlined": "MuiSelect-outlined",
                                                    "root": "MuiSelect-root",
                                                    "select": "MuiSelect-select",
                                                    "selectMenu": "MuiSelect-selectMenu",
                                                  },
                                                  "displayEmpty": true,
                                                  "labelId": undefined,
                                                  "multiple": false,
                                                  "onClose": undefined,
                                                  "onOpen": undefined,
                                                  "open": undefined,
                                                  "renderValue": undefined,
                                                  "type": undefined,
                                                  "variant": "standard",
                                                }
                                              }
                                              multiline={false}
                                              onChange={[Function]}
                                              type="text"
                                              value="5"
                                            >
                                              <div
                                                className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(SelectInput)
                                                  IconComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    }
                                                  }
                                                  SelectDisplayProps={
                                                    Object {
                                                      "id": undefined,
                                                    }
                                                  }
                                                  aria-invalid={false}
                                                  autoWidth={false}
                                                  className="MuiInputBase-input MuiInput-input"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiSelect-filled",
                                                      "icon": "MuiSelect-icon",
                                                      "iconFilled": "MuiSelect-iconFilled",
                                                      "iconOpen": "MuiSelect-iconOpen",
                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                      "nativeInput": "MuiSelect-nativeInput",
                                                      "outlined": "MuiSelect-outlined",
                                                      "root": "MuiSelect-root",
                                                      "select": "MuiSelect-select",
                                                      "selectMenu": "MuiSelect-selectMenu",
                                                    }
                                                  }
                                                  disabled={false}
                                                  displayEmpty={true}
                                                  inputRef={[Function]}
                                                  multiple={false}
                                                  onAnimationStart={[Function]}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  required={false}
                                                  value="5"
                                                  variant="standard"
                                                >
                                                  <div
                                                    aria-haspopup="listbox"
                                                    className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    5分毎
                                                  </div>
                                                  <input
                                                    aria-hidden={true}
                                                    className="MuiSelect-nativeInput"
                                                    onAnimationStart={[Function]}
                                                    onChange={[Function]}
                                                    required={false}
                                                    tabIndex={-1}
                                                    value="5"
                                                  />
                                                  <ForwardRef(ArrowDropDownIcon)
                                                    className="MuiSelect-icon"
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="MuiSelect-icon"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="MuiSelect-icon"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root MuiSelect-icon"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M7 10l5 5 5-5z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(ArrowDropDownIcon)>
                                                  <WithStyles(ForwardRef(Menu))
                                                    MenuListProps={
                                                      Object {
                                                        "aria-labelledby": undefined,
                                                        "disableListWrap": true,
                                                        "role": "listbox",
                                                      }
                                                    }
                                                    PaperProps={
                                                      Object {
                                                        "style": Object {
                                                          "minWidth": undefined,
                                                        },
                                                      }
                                                    }
                                                    anchorEl={
                                                      <div
                                                        aria-haspopup="listbox"
                                                        class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                        role="button"
                                                        tabindex="0"
                                                      >
                                                        5分毎
                                                      </div>
                                                    }
                                                    id="menu-"
                                                    onClose={[Function]}
                                                    open={false}
                                                  >
                                                    <ForwardRef(Menu)
                                                      MenuListProps={
                                                        Object {
                                                          "aria-labelledby": undefined,
                                                          "disableListWrap": true,
                                                          "role": "listbox",
                                                        }
                                                      }
                                                      PaperProps={
                                                        Object {
                                                          "style": Object {
                                                            "minWidth": undefined,
                                                          },
                                                        }
                                                      }
                                                      anchorEl={
                                                        <div
                                                          aria-haspopup="listbox"
                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                          role="button"
                                                          tabindex="0"
                                                        >
                                                          5分毎
                                                        </div>
                                                      }
                                                      classes={
                                                        Object {
                                                          "list": "MuiMenu-list",
                                                          "paper": "MuiMenu-paper",
                                                        }
                                                      }
                                                      id="menu-"
                                                      onClose={[Function]}
                                                      open={false}
                                                    >
                                                      <WithStyles(ForwardRef(Popover))
                                                        PaperProps={
                                                          Object {
                                                            "classes": Object {
                                                              "root": "MuiMenu-paper",
                                                            },
                                                            "style": Object {
                                                              "minWidth": undefined,
                                                            },
                                                          }
                                                        }
                                                        TransitionProps={
                                                          Object {
                                                            "onEntering": [Function],
                                                          }
                                                        }
                                                        anchorEl={
                                                          <div
                                                            aria-haspopup="listbox"
                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                            role="button"
                                                            tabindex="0"
                                                          >
                                                            5分毎
                                                          </div>
                                                        }
                                                        anchorOrigin={
                                                          Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                                        }
                                                        getContentAnchorEl={[Function]}
                                                        id="menu-"
                                                        onClose={[Function]}
                                                        open={false}
                                                        transformOrigin={
                                                          Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                                        }
                                                        transitionDuration="auto"
                                                      >
                                                        <ForwardRef(Popover)
                                                          PaperProps={
                                                            Object {
                                                              "classes": Object {
                                                                "root": "MuiMenu-paper",
                                                              },
                                                              "style": Object {
                                                                "minWidth": undefined,
                                                              },
                                                            }
                                                          }
                                                          TransitionProps={
                                                            Object {
                                                              "onEntering": [Function],
                                                            }
                                                          }
                                                          anchorEl={
                                                            <div
                                                              aria-haspopup="listbox"
                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                              role="button"
                                                              tabindex="0"
                                                            >
                                                              5分毎
                                                            </div>
                                                          }
                                                          anchorOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          classes={
                                                            Object {
                                                              "paper": "MuiPopover-paper",
                                                              "root": "MuiPopover-root",
                                                            }
                                                          }
                                                          getContentAnchorEl={[Function]}
                                                          id="menu-"
                                                          onClose={[Function]}
                                                          open={false}
                                                          transformOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          transitionDuration="auto"
                                                        >
                                                          <ForwardRef(Modal)
                                                            BackdropProps={
                                                              Object {
                                                                "invisible": true,
                                                              }
                                                            }
                                                            className="MuiPopover-root"
                                                            container={<body />}
                                                            id="menu-"
                                                            onClose={[Function]}
                                                            open={false}
                                                          />
                                                        </ForwardRef(Popover)>
                                                      </WithStyles(ForwardRef(Popover))>
                                                    </ForwardRef(Menu)>
                                                  </WithStyles(ForwardRef(Menu))>
                                                </ForwardRef(SelectInput)>
                                              </div>
                                            </ForwardRef(InputBase)>
                                          </WithStyles(ForwardRef(InputBase))>
                                        </ForwardRef(Input)>
                                      </WithStyles(ForwardRef(Input))>
                                    </ForwardRef(Select)>
                                  </WithStyles(ForwardRef(Select))>
                                </div>
                              </ForwardRef(FormControl)>
                            </WithStyles(ForwardRef(FormControl))>
                          </Selectbox>
                        </div>
                      </FormTimeUnit__Container>
                    </div>
                  </FormUserBase__Container>
                </FormUserBase>
              </FormTimeUnit>
              <FormSubmitFrequency
                initialValue="1w"
                setter={[Function]}
              >
                <FormUserBase
                  definition="シフト提出頻度"
                  item={
                    <FormSubmitFrequency__Container>
                      <Selectbox
                        initialValue="1w"
                        options={
                          Array [
                            Object {
                              "label": "1週間毎",
                              "value": "1w",
                            },
                            Object {
                              "label": "2週間毎",
                              "value": "2w",
                            },
                            Object {
                              "label": "1ヶ月ごと",
                              "value": "1m",
                            },
                          ]
                        }
                        setter={[Function]}
                      />
                    </FormSubmitFrequency__Container>
                  }
                >
                  <FormUserBase__Container>
                    <div
                      className="FormUserBase__Container-sc-143288g-0 gaKKXv"
                    >
                      <FormUserBase__TitleWrapper>
                        <div
                          className="FormUserBase__TitleWrapper-sc-143288g-1 jSzBJn"
                        >
                          <FormUserBase__Title
                            $position="center"
                          >
                            <div
                              className="FormUserBase__Title-sc-143288g-2 dKTgsS"
                            >
                              シフト提出頻度
                            </div>
                          </FormUserBase__Title>
                        </div>
                      </FormUserBase__TitleWrapper>
                      <FormSubmitFrequency__Container>
                        <div
                          className="FormSubmitFrequency__Container-sc-1bgjk3t-0 bGkqJD"
                        >
                          <Selectbox
                            initialValue="1w"
                            options={
                              Array [
                                Object {
                                  "label": "1週間毎",
                                  "value": "1w",
                                },
                                Object {
                                  "label": "2週間毎",
                                  "value": "2w",
                                },
                                Object {
                                  "label": "1ヶ月ごと",
                                  "value": "1m",
                                },
                              ]
                            }
                            setter={[Function]}
                          >
                            <WithStyles(ForwardRef(FormControl))
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <ForwardRef(FormControl)
                                classes={
                                  Object {
                                    "fullWidth": "MuiFormControl-fullWidth",
                                    "marginDense": "MuiFormControl-marginDense",
                                    "marginNormal": "MuiFormControl-marginNormal",
                                    "root": "MuiFormControl-root",
                                  }
                                }
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <div
                                  className="MuiFormControl-root"
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <WithStyles(ForwardRef(Select))
                                    displayEmpty={true}
                                    onChange={[Function]}
                                    value="1w"
                                    variant="standard"
                                  >
                                    <ForwardRef(Select)
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "filled": "MuiSelect-filled",
                                          "icon": "MuiSelect-icon",
                                          "iconFilled": "MuiSelect-iconFilled",
                                          "iconOpen": "MuiSelect-iconOpen",
                                          "iconOutlined": "MuiSelect-iconOutlined",
                                          "nativeInput": "MuiSelect-nativeInput",
                                          "outlined": "MuiSelect-outlined",
                                          "root": "MuiSelect-root",
                                          "select": "MuiSelect-select",
                                          "selectMenu": "MuiSelect-selectMenu",
                                        }
                                      }
                                      displayEmpty={true}
                                      onChange={[Function]}
                                      value="1w"
                                      variant="standard"
                                    >
                                      <WithStyles(ForwardRef(Input))
                                        inputComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "IconComponent": [Function],
                                              "MenuProps": [Function],
                                              "SelectDisplayProps": [Function],
                                              "aria-label": [Function],
                                              "autoFocus": [Function],
                                              "autoWidth": [Function],
                                              "children": [Function],
                                              "className": [Function],
                                              "classes": [Function],
                                              "defaultValue": [Function],
                                              "disabled": [Function],
                                              "displayEmpty": [Function],
                                              "inputRef": [Function],
                                              "labelId": [Function],
                                              "multiple": [Function],
                                              "name": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onClose": [Function],
                                              "onFocus": [Function],
                                              "onOpen": [Function],
                                              "open": [Function],
                                              "readOnly": [Function],
                                              "renderValue": [Function],
                                              "tabIndex": [Function],
                                              "type": [Function],
                                              "value": [Function],
                                              "variant": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        inputProps={
                                          Object {
                                            "IconComponent": Object {
                                              "$$typeof": Symbol(react.memo),
                                              "compare": null,
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                            },
                                            "MenuProps": undefined,
                                            "SelectDisplayProps": Object {
                                              "id": undefined,
                                            },
                                            "autoWidth": false,
                                            "children": Array [
                                              <WithStyles(ForwardRef(MenuItem))
                                                value="1w"
                                              >
                                                1週間毎
                                              </WithStyles(ForwardRef(MenuItem))>,
                                              <WithStyles(ForwardRef(MenuItem))
                                                value="2w"
                                              >
                                                2週間毎
                                              </WithStyles(ForwardRef(MenuItem))>,
                                              <WithStyles(ForwardRef(MenuItem))
                                                value="1m"
                                              >
                                                1ヶ月ごと
                                              </WithStyles(ForwardRef(MenuItem))>,
                                            ],
                                            "classes": Object {
                                              "disabled": "Mui-disabled",
                                              "filled": "MuiSelect-filled",
                                              "icon": "MuiSelect-icon",
                                              "iconFilled": "MuiSelect-iconFilled",
                                              "iconOpen": "MuiSelect-iconOpen",
                                              "iconOutlined": "MuiSelect-iconOutlined",
                                              "nativeInput": "MuiSelect-nativeInput",
                                              "outlined": "MuiSelect-outlined",
                                              "root": "MuiSelect-root",
                                              "select": "MuiSelect-select",
                                              "selectMenu": "MuiSelect-selectMenu",
                                            },
                                            "displayEmpty": true,
                                            "labelId": undefined,
                                            "multiple": false,
                                            "onClose": undefined,
                                            "onOpen": undefined,
                                            "open": undefined,
                                            "renderValue": undefined,
                                            "type": undefined,
                                            "variant": "standard",
                                          }
                                        }
                                        onChange={[Function]}
                                        value="1w"
                                      >
                                        <ForwardRef(Input)
                                          classes={
                                            Object {
                                              "colorSecondary": "MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInput-formControl",
                                              "fullWidth": "MuiInput-fullWidth",
                                              "input": "MuiInput-input",
                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInput-marginDense",
                                              "multiline": "MuiInput-multiline",
                                              "root": "MuiInput-root",
                                              "underline": "MuiInput-underline",
                                            }
                                          }
                                          inputComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "IconComponent": [Function],
                                                "MenuProps": [Function],
                                                "SelectDisplayProps": [Function],
                                                "aria-label": [Function],
                                                "autoFocus": [Function],
                                                "autoWidth": [Function],
                                                "children": [Function],
                                                "className": [Function],
                                                "classes": [Function],
                                                "defaultValue": [Function],
                                                "disabled": [Function],
                                                "displayEmpty": [Function],
                                                "inputRef": [Function],
                                                "labelId": [Function],
                                                "multiple": [Function],
                                                "name": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onClose": [Function],
                                                "onFocus": [Function],
                                                "onOpen": [Function],
                                                "open": [Function],
                                                "readOnly": [Function],
                                                "renderValue": [Function],
                                                "tabIndex": [Function],
                                                "type": [Function],
                                                "value": [Function],
                                                "variant": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          inputProps={
                                            Object {
                                              "IconComponent": Object {
                                                "$$typeof": Symbol(react.memo),
                                                "compare": null,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                              },
                                              "MenuProps": undefined,
                                              "SelectDisplayProps": Object {
                                                "id": undefined,
                                              },
                                              "autoWidth": false,
                                              "children": Array [
                                                <WithStyles(ForwardRef(MenuItem))
                                                  value="1w"
                                                >
                                                  1週間毎
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                <WithStyles(ForwardRef(MenuItem))
                                                  value="2w"
                                                >
                                                  2週間毎
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                <WithStyles(ForwardRef(MenuItem))
                                                  value="1m"
                                                >
                                                  1ヶ月ごと
                                                </WithStyles(ForwardRef(MenuItem))>,
                                              ],
                                              "classes": Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiSelect-filled",
                                                "icon": "MuiSelect-icon",
                                                "iconFilled": "MuiSelect-iconFilled",
                                                "iconOpen": "MuiSelect-iconOpen",
                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                "nativeInput": "MuiSelect-nativeInput",
                                                "outlined": "MuiSelect-outlined",
                                                "root": "MuiSelect-root",
                                                "select": "MuiSelect-select",
                                                "selectMenu": "MuiSelect-selectMenu",
                                              },
                                              "displayEmpty": true,
                                              "labelId": undefined,
                                              "multiple": false,
                                              "onClose": undefined,
                                              "onOpen": undefined,
                                              "open": undefined,
                                              "renderValue": undefined,
                                              "type": undefined,
                                              "variant": "standard",
                                            }
                                          }
                                          onChange={[Function]}
                                          value="1w"
                                        >
                                          <WithStyles(ForwardRef(InputBase))
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root MuiInput-underline",
                                                "underline": null,
                                              }
                                            }
                                            fullWidth={false}
                                            inputComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "IconComponent": [Function],
                                                  "MenuProps": [Function],
                                                  "SelectDisplayProps": [Function],
                                                  "aria-label": [Function],
                                                  "autoFocus": [Function],
                                                  "autoWidth": [Function],
                                                  "children": [Function],
                                                  "className": [Function],
                                                  "classes": [Function],
                                                  "defaultValue": [Function],
                                                  "disabled": [Function],
                                                  "displayEmpty": [Function],
                                                  "inputRef": [Function],
                                                  "labelId": [Function],
                                                  "multiple": [Function],
                                                  "name": [Function],
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "onClose": [Function],
                                                  "onFocus": [Function],
                                                  "onOpen": [Function],
                                                  "open": [Function],
                                                  "readOnly": [Function],
                                                  "renderValue": [Function],
                                                  "tabIndex": [Function],
                                                  "type": [Function],
                                                  "value": [Function],
                                                  "variant": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            inputProps={
                                              Object {
                                                "IconComponent": Object {
                                                  "$$typeof": Symbol(react.memo),
                                                  "compare": null,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                },
                                                "MenuProps": undefined,
                                                "SelectDisplayProps": Object {
                                                  "id": undefined,
                                                },
                                                "autoWidth": false,
                                                "children": Array [
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value="1w"
                                                  >
                                                    1週間毎
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value="2w"
                                                  >
                                                    2週間毎
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    value="1m"
                                                  >
                                                    1ヶ月ごと
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                ],
                                                "classes": Object {
                                                  "disabled": "Mui-disabled",
                                                  "filled": "MuiSelect-filled",
                                                  "icon": "MuiSelect-icon",
                                                  "iconFilled": "MuiSelect-iconFilled",
                                                  "iconOpen": "MuiSelect-iconOpen",
                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                  "nativeInput": "MuiSelect-nativeInput",
                                                  "outlined": "MuiSelect-outlined",
                                                  "root": "MuiSelect-root",
                                                  "select": "MuiSelect-select",
                                                  "selectMenu": "MuiSelect-selectMenu",
                                                },
                                                "displayEmpty": true,
                                                "labelId": undefined,
                                                "multiple": false,
                                                "onClose": undefined,
                                                "onOpen": undefined,
                                                "open": undefined,
                                                "renderValue": undefined,
                                                "type": undefined,
                                                "variant": "standard",
                                              }
                                            }
                                            multiline={false}
                                            onChange={[Function]}
                                            type="text"
                                            value="1w"
                                          >
                                            <ForwardRef(InputBase)
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled Mui-disabled",
                                                  "error": "Mui-error Mui-error",
                                                  "focused": "Mui-focused Mui-focused",
                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                  "input": "MuiInputBase-input MuiInput-input",
                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                }
                                              }
                                              fullWidth={false}
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "MenuProps": [Function],
                                                    "SelectDisplayProps": [Function],
                                                    "aria-label": [Function],
                                                    "autoFocus": [Function],
                                                    "autoWidth": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "defaultValue": [Function],
                                                    "disabled": [Function],
                                                    "displayEmpty": [Function],
                                                    "inputRef": [Function],
                                                    "labelId": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onClose": [Function],
                                                    "onFocus": [Function],
                                                    "onOpen": [Function],
                                                    "open": [Function],
                                                    "readOnly": [Function],
                                                    "renderValue": [Function],
                                                    "tabIndex": [Function],
                                                    "type": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "MenuProps": undefined,
                                                  "SelectDisplayProps": Object {
                                                    "id": undefined,
                                                  },
                                                  "autoWidth": false,
                                                  "children": Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value="1w"
                                                    >
                                                      1週間毎
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value="2w"
                                                    >
                                                      2週間毎
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      value="1m"
                                                    >
                                                      1ヶ月ごと
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiSelect-filled",
                                                    "icon": "MuiSelect-icon",
                                                    "iconFilled": "MuiSelect-iconFilled",
                                                    "iconOpen": "MuiSelect-iconOpen",
                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                    "nativeInput": "MuiSelect-nativeInput",
                                                    "outlined": "MuiSelect-outlined",
                                                    "root": "MuiSelect-root",
                                                    "select": "MuiSelect-select",
                                                    "selectMenu": "MuiSelect-selectMenu",
                                                  },
                                                  "displayEmpty": true,
                                                  "labelId": undefined,
                                                  "multiple": false,
                                                  "onClose": undefined,
                                                  "onOpen": undefined,
                                                  "open": undefined,
                                                  "renderValue": undefined,
                                                  "type": undefined,
                                                  "variant": "standard",
                                                }
                                              }
                                              multiline={false}
                                              onChange={[Function]}
                                              type="text"
                                              value="1w"
                                            >
                                              <div
                                                className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(SelectInput)
                                                  IconComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    }
                                                  }
                                                  SelectDisplayProps={
                                                    Object {
                                                      "id": undefined,
                                                    }
                                                  }
                                                  aria-invalid={false}
                                                  autoWidth={false}
                                                  className="MuiInputBase-input MuiInput-input"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiSelect-filled",
                                                      "icon": "MuiSelect-icon",
                                                      "iconFilled": "MuiSelect-iconFilled",
                                                      "iconOpen": "MuiSelect-iconOpen",
                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                      "nativeInput": "MuiSelect-nativeInput",
                                                      "outlined": "MuiSelect-outlined",
                                                      "root": "MuiSelect-root",
                                                      "select": "MuiSelect-select",
                                                      "selectMenu": "MuiSelect-selectMenu",
                                                    }
                                                  }
                                                  disabled={false}
                                                  displayEmpty={true}
                                                  inputRef={[Function]}
                                                  multiple={false}
                                                  onAnimationStart={[Function]}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  required={false}
                                                  value="1w"
                                                  variant="standard"
                                                >
                                                  <div
                                                    aria-haspopup="listbox"
                                                    className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    1週間毎
                                                  </div>
                                                  <input
                                                    aria-hidden={true}
                                                    className="MuiSelect-nativeInput"
                                                    onAnimationStart={[Function]}
                                                    onChange={[Function]}
                                                    required={false}
                                                    tabIndex={-1}
                                                    value="1w"
                                                  />
                                                  <ForwardRef(ArrowDropDownIcon)
                                                    className="MuiSelect-icon"
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="MuiSelect-icon"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="MuiSelect-icon"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root MuiSelect-icon"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M7 10l5 5 5-5z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(ArrowDropDownIcon)>
                                                  <WithStyles(ForwardRef(Menu))
                                                    MenuListProps={
                                                      Object {
                                                        "aria-labelledby": undefined,
                                                        "disableListWrap": true,
                                                        "role": "listbox",
                                                      }
                                                    }
                                                    PaperProps={
                                                      Object {
                                                        "style": Object {
                                                          "minWidth": undefined,
                                                        },
                                                      }
                                                    }
                                                    anchorEl={
                                                      <div
                                                        aria-haspopup="listbox"
                                                        class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                        role="button"
                                                        tabindex="0"
                                                      >
                                                        1週間毎
                                                      </div>
                                                    }
                                                    id="menu-"
                                                    onClose={[Function]}
                                                    open={false}
                                                  >
                                                    <ForwardRef(Menu)
                                                      MenuListProps={
                                                        Object {
                                                          "aria-labelledby": undefined,
                                                          "disableListWrap": true,
                                                          "role": "listbox",
                                                        }
                                                      }
                                                      PaperProps={
                                                        Object {
                                                          "style": Object {
                                                            "minWidth": undefined,
                                                          },
                                                        }
                                                      }
                                                      anchorEl={
                                                        <div
                                                          aria-haspopup="listbox"
                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                          role="button"
                                                          tabindex="0"
                                                        >
                                                          1週間毎
                                                        </div>
                                                      }
                                                      classes={
                                                        Object {
                                                          "list": "MuiMenu-list",
                                                          "paper": "MuiMenu-paper",
                                                        }
                                                      }
                                                      id="menu-"
                                                      onClose={[Function]}
                                                      open={false}
                                                    >
                                                      <WithStyles(ForwardRef(Popover))
                                                        PaperProps={
                                                          Object {
                                                            "classes": Object {
                                                              "root": "MuiMenu-paper",
                                                            },
                                                            "style": Object {
                                                              "minWidth": undefined,
                                                            },
                                                          }
                                                        }
                                                        TransitionProps={
                                                          Object {
                                                            "onEntering": [Function],
                                                          }
                                                        }
                                                        anchorEl={
                                                          <div
                                                            aria-haspopup="listbox"
                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                            role="button"
                                                            tabindex="0"
                                                          >
                                                            1週間毎
                                                          </div>
                                                        }
                                                        anchorOrigin={
                                                          Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                                        }
                                                        getContentAnchorEl={[Function]}
                                                        id="menu-"
                                                        onClose={[Function]}
                                                        open={false}
                                                        transformOrigin={
                                                          Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                                        }
                                                        transitionDuration="auto"
                                                      >
                                                        <ForwardRef(Popover)
                                                          PaperProps={
                                                            Object {
                                                              "classes": Object {
                                                                "root": "MuiMenu-paper",
                                                              },
                                                              "style": Object {
                                                                "minWidth": undefined,
                                                              },
                                                            }
                                                          }
                                                          TransitionProps={
                                                            Object {
                                                              "onEntering": [Function],
                                                            }
                                                          }
                                                          anchorEl={
                                                            <div
                                                              aria-haspopup="listbox"
                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                              role="button"
                                                              tabindex="0"
                                                            >
                                                              1週間毎
                                                            </div>
                                                          }
                                                          anchorOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          classes={
                                                            Object {
                                                              "paper": "MuiPopover-paper",
                                                              "root": "MuiPopover-root",
                                                            }
                                                          }
                                                          getContentAnchorEl={[Function]}
                                                          id="menu-"
                                                          onClose={[Function]}
                                                          open={false}
                                                          transformOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          transitionDuration="auto"
                                                        >
                                                          <ForwardRef(Modal)
                                                            BackdropProps={
                                                              Object {
                                                                "invisible": true,
                                                              }
                                                            }
                                                            className="MuiPopover-root"
                                                            container={<body />}
                                                            id="menu-"
                                                            onClose={[Function]}
                                                            open={false}
                                                          />
                                                        </ForwardRef(Popover)>
                                                      </WithStyles(ForwardRef(Popover))>
                                                    </ForwardRef(Menu)>
                                                  </WithStyles(ForwardRef(Menu))>
                                                </ForwardRef(SelectInput)>
                                              </div>
                                            </ForwardRef(InputBase)>
                                          </WithStyles(ForwardRef(InputBase))>
                                        </ForwardRef(Input)>
                                      </WithStyles(ForwardRef(Input))>
                                    </ForwardRef(Select)>
                                  </WithStyles(ForwardRef(Select))>
                                </div>
                              </ForwardRef(FormControl)>
                            </WithStyles(ForwardRef(FormControl))>
                          </Selectbox>
                        </div>
                      </FormSubmitFrequency__Container>
                    </div>
                  </FormUserBase__Container>
                </FormUserBase>
              </FormSubmitFrequency>
            </div>
          </InitialConfigForm__Items>
        </section>
      </InitialConfigForm__Container>
      <InitialConfigForm__Container>
        <section
          className="InitialConfigForm__Container-sc-13nmw88-1 dnLWaf"
        >
          <Heading
            type="sub"
            underline={true}
          >
            <Heading__sub
              variant="h2"
            >
              <WithStyles(ForwardRef(Typography))
                className="Heading__sub-sc-rckheo-0 ceEKfy"
                variant="h2"
              >
                <ForwardRef(Typography)
                  className="Heading__sub-sc-rckheo-0 ceEKfy"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  variant="h2"
                >
                  <h2
                    className="MuiTypography-root Heading__sub-sc-rckheo-0 ceEKfy MuiTypography-h2"
                  >
                    権限設定
                  </h2>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </Heading__sub>
            <Heading__sub>
              <div
                className="Heading__sub-sc-rckheo-2 bYGhYI"
              />
            </Heading__sub>
          </Heading>
          <InitialConfigForm__Items>
            <div
              className="InitialConfigForm__Items-sc-13nmw88-2 UALOe"
            >
              <FormTimeCardAuth
                initialValue={false}
                setter={[Function]}
              >
                <FormUserBase
                  definition="タイムカード入力権限"
                  item={
                    <Switch
                      initialChecked={false}
                      labelOnFalse="管理ユーザーのみ入力を許可"
                      setter={[Function]}
                    >
                      一般ユーザーの入力を許可
                    </Switch>
                  }
                >
                  <FormUserBase__Container>
                    <div
                      className="FormUserBase__Container-sc-143288g-0 gaKKXv"
                    >
                      <FormUserBase__TitleWrapper>
                        <div
                          className="FormUserBase__TitleWrapper-sc-143288g-1 jSzBJn"
                        >
                          <FormUserBase__Title
                            $position="center"
                          >
                            <div
                              className="FormUserBase__Title-sc-143288g-2 dKTgsS"
                            >
                              タイムカード入力権限
                            </div>
                          </FormUserBase__Title>
                        </div>
                      </FormUserBase__TitleWrapper>
                      <Switch
                        initialChecked={false}
                        labelOnFalse="管理ユーザーのみ入力を許可"
                        setter={[Function]}
                      >
                        <WithStyles(ForwardRef(FormControlLabel))
                          control={
                            <WithStyles(ForwardRef(Switch))
                              checked={false}
                              color="primary"
                              disabled={false}
                              name=""
                              onChange={[Function]}
                              size="medium"
                            />
                          }
                          label={
                            <Switch__Label>
                              管理ユーザーのみ入力を許可
                            </Switch__Label>
                          }
                          style={
                            Object {
                              "fontSize": "0,9rem",
                            }
                          }
                        >
                          <ForwardRef(FormControlLabel)
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "label": "MuiFormControlLabel-label",
                                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                "root": "MuiFormControlLabel-root",
                              }
                            }
                            control={
                              <WithStyles(ForwardRef(Switch))
                                checked={false}
                                color="primary"
                                disabled={false}
                                name=""
                                onChange={[Function]}
                                size="medium"
                              />
                            }
                            label={
                              <Switch__Label>
                                管理ユーザーのみ入力を許可
                              </Switch__Label>
                            }
                            style={
                              Object {
                                "fontSize": "0,9rem",
                              }
                            }
                          >
                            <label
                              className="MuiFormControlLabel-root"
                              style={
                                Object {
                                  "fontSize": "0,9rem",
                                }
                              }
                            >
                              <WithStyles(ForwardRef(Switch))
                                checked={false}
                                color="primary"
                                disabled={false}
                                name=""
                                onChange={[Function]}
                                size="medium"
                              >
                                <ForwardRef(Switch)
                                  checked={false}
                                  classes={
                                    Object {
                                      "checked": "Mui-checked",
                                      "colorPrimary": "MuiSwitch-colorPrimary",
                                      "colorSecondary": "MuiSwitch-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiSwitch-edgeEnd",
                                      "edgeStart": "MuiSwitch-edgeStart",
                                      "input": "MuiSwitch-input",
                                      "root": "MuiSwitch-root",
                                      "sizeSmall": "MuiSwitch-sizeSmall",
                                      "switchBase": "MuiSwitch-switchBase",
                                      "thumb": "MuiSwitch-thumb",
                                      "track": "MuiSwitch-track",
                                    }
                                  }
                                  color="primary"
                                  disabled={false}
                                  name=""
                                  onChange={[Function]}
                                  size="medium"
                                >
                                  <span
                                    className="MuiSwitch-root"
                                  >
                                    <WithStyles(ForwardRef(SwitchBase))
                                      checked={false}
                                      checkedIcon={
                                        <span
                                          className="MuiSwitch-thumb"
                                        />
                                      }
                                      classes={
                                        Object {
                                          "checked": "Mui-checked",
                                          "disabled": "Mui-disabled",
                                          "input": "MuiSwitch-input",
                                          "root": "MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                        }
                                      }
                                      disabled={false}
                                      icon={
                                        <span
                                          className="MuiSwitch-thumb"
                                        />
                                      }
                                      name=""
                                      onChange={[Function]}
                                      type="checkbox"
                                    >
                                      <ForwardRef(SwitchBase)
                                        checked={false}
                                        checkedIcon={
                                          <span
                                            className="MuiSwitch-thumb"
                                          />
                                        }
                                        classes={
                                          Object {
                                            "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                            "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                            "input": "PrivateSwitchBase-input-4 MuiSwitch-input",
                                            "root": "PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                          }
                                        }
                                        disabled={false}
                                        icon={
                                          <span
                                            className="MuiSwitch-thumb"
                                          />
                                        }
                                        name=""
                                        onChange={[Function]}
                                        type="checkbox"
                                      >
                                        <WithStyles(ForwardRef(IconButton))
                                          className="PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                          component="span"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <ForwardRef(IconButton)
                                            className="PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                            component="span"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="span"
                                                disabled={false}
                                                focusRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  aria-disabled={false}
                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                  onBlur={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <input
                                                      checked={false}
                                                      className="PrivateSwitchBase-input-4 MuiSwitch-input"
                                                      disabled={false}
                                                      name=""
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                    />
                                                    <span
                                                      className="MuiSwitch-thumb"
                                                    />
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={true}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={true}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </span>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                      </ForwardRef(SwitchBase)>
                                    </WithStyles(ForwardRef(SwitchBase))>
                                    <span
                                      className="MuiSwitch-track"
                                    />
                                  </span>
                                </ForwardRef(Switch)>
                              </WithStyles(ForwardRef(Switch))>
                              <WithStyles(ForwardRef(Typography))
                                className="MuiFormControlLabel-label"
                                component="span"
                              >
                                <ForwardRef(Typography)
                                  className="MuiFormControlLabel-label"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  component="span"
                                >
                                  <span
                                    className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                  >
                                    <Switch__Label>
                                      <div
                                        className="Switch__Label-sc-wjp50u-0 dOExmH"
                                      >
                                        管理ユーザーのみ入力を許可
                                      </div>
                                    </Switch__Label>
                                  </span>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </label>
                          </ForwardRef(FormControlLabel)>
                        </WithStyles(ForwardRef(FormControlLabel))>
                      </Switch>
                    </div>
                  </FormUserBase__Container>
                </FormUserBase>
              </FormTimeCardAuth>
            </div>
          </InitialConfigForm__Items>
        </section>
      </InitialConfigForm__Container>
      <InitialConfigForm__Submit>
        <div
          className="InitialConfigForm__Submit-sc-13nmw88-4 bQMzHe"
        >
          <Button
            onClick={[Function]}
          >
            <WithStyles(ForwardRef(Button))
              color="primary"
              disabled={false}
              onClick={[Function]}
              size="medium"
              variant="contained"
            >
              <ForwardRef(Button)
                classes={
                  Object {
                    "colorInherit": "MuiButton-colorInherit",
                    "contained": "MuiButton-contained",
                    "containedPrimary": "MuiButton-containedPrimary",
                    "containedSecondary": "MuiButton-containedSecondary",
                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                    "disableElevation": "MuiButton-disableElevation",
                    "disabled": "Mui-disabled",
                    "endIcon": "MuiButton-endIcon",
                    "focusVisible": "Mui-focusVisible",
                    "fullWidth": "MuiButton-fullWidth",
                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                    "label": "MuiButton-label",
                    "outlined": "MuiButton-outlined",
                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                    "root": "MuiButton-root",
                    "sizeLarge": "MuiButton-sizeLarge",
                    "sizeSmall": "MuiButton-sizeSmall",
                    "startIcon": "MuiButton-startIcon",
                    "text": "MuiButton-text",
                    "textPrimary": "MuiButton-textPrimary",
                    "textSecondary": "MuiButton-textSecondary",
                    "textSizeLarge": "MuiButton-textSizeLarge",
                    "textSizeSmall": "MuiButton-textSizeSmall",
                  }
                }
                color="primary"
                disabled={false}
                onClick={[Function]}
                size="medium"
                variant="contained"
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                  component="button"
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="Mui-focusVisible"
                  onClick={[Function]}
                  type="button"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="button"
                    disabled={false}
                    focusRipple={true}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <span
                        className="MuiButton-label"
                      >
                        設定完了
                      </span>
                      <WithStyles(memo)
                        center={false}
                      >
                        <ForwardRef(TouchRipple)
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child",
                              "childLeaving": "MuiTouchRipple-childLeaving",
                              "childPulsate": "MuiTouchRipple-childPulsate",
                              "ripple": "MuiTouchRipple-ripple",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                              "root": "MuiTouchRipple-root",
                            }
                          }
                        >
                          <span
                            className="MuiTouchRipple-root"
                          >
                            <TransitionGroup
                              childFactory={[Function]}
                              component={null}
                              exit={true}
                            />
                          </span>
                        </ForwardRef(TouchRipple)>
                      </WithStyles(memo)>
                    </button>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(Button)>
            </WithStyles(ForwardRef(Button))>
          </Button>
        </div>
      </InitialConfigForm__Submit>
    </div>
  </InitialConfigForm__Root>
</InitialConfigForm>
`;
