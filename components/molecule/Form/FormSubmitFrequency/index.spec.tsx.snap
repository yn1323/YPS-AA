// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`molecule/Form/FormSubmitFrequency molecule/Form/FormSubmitFrequency-snapshot 1`] = `
<FormSubmitFrequency>
  <FormUserBase
    definition="シフト提出頻度"
    item={
      <FormSubmitFrequency__Container>
        <Selectbox
          initialValue="2w"
          options={
            Array [
              Object {
                "label": "1週間毎",
                "value": "1w",
              },
              Object {
                "label": "2週間毎",
                "value": "2w",
              },
              Object {
                "label": "1ヶ月ごと",
                "value": "1m",
              },
            ]
          }
        />
      </FormSubmitFrequency__Container>
    }
  >
    <FormUserBase__Container>
      <div
        className="FormUserBase__Container-sc-143288g-0 krfzgn"
      >
        <FormUserBase__Title
          $position="center"
        >
          <div
            className="FormUserBase__Title-sc-143288g-1 byaPDS"
          >
            シフト提出頻度
          </div>
        </FormUserBase__Title>
        <FormSubmitFrequency__Container>
          <div
            className="FormSubmitFrequency__Container-sc-1bgjk3t-0 bGkqJD"
          >
            <Selectbox
              initialValue="2w"
              options={
                Array [
                  Object {
                    "label": "1週間毎",
                    "value": "1w",
                  },
                  Object {
                    "label": "2週間毎",
                    "value": "2w",
                  },
                  Object {
                    "label": "1ヶ月ごと",
                    "value": "1m",
                  },
                ]
              }
            >
              <WithStyles(ForwardRef(FormControl))
                style={
                  Object {
                    "width": "100%",
                  }
                }
              >
                <ForwardRef(FormControl)
                  classes={
                    Object {
                      "fullWidth": "MuiFormControl-fullWidth",
                      "marginDense": "MuiFormControl-marginDense",
                      "marginNormal": "MuiFormControl-marginNormal",
                      "root": "MuiFormControl-root",
                    }
                  }
                  style={
                    Object {
                      "width": "100%",
                    }
                  }
                >
                  <div
                    className="MuiFormControl-root"
                    style={
                      Object {
                        "width": "100%",
                      }
                    }
                  >
                    <WithStyles(ForwardRef(Select))
                      displayEmpty={true}
                      onChange={[Function]}
                      value="2w"
                      variant="standard"
                    >
                      <ForwardRef(Select)
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "filled": "MuiSelect-filled",
                            "icon": "MuiSelect-icon",
                            "iconFilled": "MuiSelect-iconFilled",
                            "iconOpen": "MuiSelect-iconOpen",
                            "iconOutlined": "MuiSelect-iconOutlined",
                            "nativeInput": "MuiSelect-nativeInput",
                            "outlined": "MuiSelect-outlined",
                            "root": "MuiSelect-root",
                            "select": "MuiSelect-select",
                            "selectMenu": "MuiSelect-selectMenu",
                          }
                        }
                        displayEmpty={true}
                        onChange={[Function]}
                        value="2w"
                        variant="standard"
                      >
                        <WithStyles(ForwardRef(Input))
                          inputComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "IconComponent": [Function],
                                "MenuProps": [Function],
                                "SelectDisplayProps": [Function],
                                "aria-label": [Function],
                                "autoFocus": [Function],
                                "autoWidth": [Function],
                                "children": [Function],
                                "className": [Function],
                                "classes": [Function],
                                "defaultValue": [Function],
                                "disabled": [Function],
                                "displayEmpty": [Function],
                                "inputRef": [Function],
                                "labelId": [Function],
                                "multiple": [Function],
                                "name": [Function],
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onClose": [Function],
                                "onFocus": [Function],
                                "onOpen": [Function],
                                "open": [Function],
                                "readOnly": [Function],
                                "renderValue": [Function],
                                "tabIndex": [Function],
                                "type": [Function],
                                "value": [Function],
                                "variant": [Function],
                              },
                              "render": [Function],
                            }
                          }
                          inputProps={
                            Object {
                              "IconComponent": Object {
                                "$$typeof": Symbol(react.memo),
                                "compare": null,
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                              },
                              "MenuProps": undefined,
                              "SelectDisplayProps": Object {
                                "id": undefined,
                              },
                              "autoWidth": false,
                              "children": Array [
                                <WithStyles(ForwardRef(MenuItem))
                                  value="1w"
                                >
                                  1週間毎
                                </WithStyles(ForwardRef(MenuItem))>,
                                <WithStyles(ForwardRef(MenuItem))
                                  value="2w"
                                >
                                  2週間毎
                                </WithStyles(ForwardRef(MenuItem))>,
                                <WithStyles(ForwardRef(MenuItem))
                                  value="1m"
                                >
                                  1ヶ月ごと
                                </WithStyles(ForwardRef(MenuItem))>,
                              ],
                              "classes": Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined",
                                "nativeInput": "MuiSelect-nativeInput",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              },
                              "displayEmpty": true,
                              "labelId": undefined,
                              "multiple": false,
                              "onClose": undefined,
                              "onOpen": undefined,
                              "open": undefined,
                              "renderValue": undefined,
                              "type": undefined,
                              "variant": "standard",
                            }
                          }
                          onChange={[Function]}
                          value="2w"
                        >
                          <ForwardRef(Input)
                            classes={
                              Object {
                                "colorSecondary": "MuiInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "marginDense": "MuiInput-marginDense",
                                "multiline": "MuiInput-multiline",
                                "root": "MuiInput-root",
                                "underline": "MuiInput-underline",
                              }
                            }
                            inputComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "IconComponent": [Function],
                                  "MenuProps": [Function],
                                  "SelectDisplayProps": [Function],
                                  "aria-label": [Function],
                                  "autoFocus": [Function],
                                  "autoWidth": [Function],
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "defaultValue": [Function],
                                  "disabled": [Function],
                                  "displayEmpty": [Function],
                                  "inputRef": [Function],
                                  "labelId": [Function],
                                  "multiple": [Function],
                                  "name": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onClose": [Function],
                                  "onFocus": [Function],
                                  "onOpen": [Function],
                                  "open": [Function],
                                  "readOnly": [Function],
                                  "renderValue": [Function],
                                  "tabIndex": [Function],
                                  "type": [Function],
                                  "value": [Function],
                                  "variant": [Function],
                                },
                                "render": [Function],
                              }
                            }
                            inputProps={
                              Object {
                                "IconComponent": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "MenuProps": undefined,
                                "SelectDisplayProps": Object {
                                  "id": undefined,
                                },
                                "autoWidth": false,
                                "children": Array [
                                  <WithStyles(ForwardRef(MenuItem))
                                    value="1w"
                                  >
                                    1週間毎
                                  </WithStyles(ForwardRef(MenuItem))>,
                                  <WithStyles(ForwardRef(MenuItem))
                                    value="2w"
                                  >
                                    2週間毎
                                  </WithStyles(ForwardRef(MenuItem))>,
                                  <WithStyles(ForwardRef(MenuItem))
                                    value="1m"
                                  >
                                    1ヶ月ごと
                                  </WithStyles(ForwardRef(MenuItem))>,
                                ],
                                "classes": Object {
                                  "disabled": "Mui-disabled",
                                  "filled": "MuiSelect-filled",
                                  "icon": "MuiSelect-icon",
                                  "iconFilled": "MuiSelect-iconFilled",
                                  "iconOpen": "MuiSelect-iconOpen",
                                  "iconOutlined": "MuiSelect-iconOutlined",
                                  "nativeInput": "MuiSelect-nativeInput",
                                  "outlined": "MuiSelect-outlined",
                                  "root": "MuiSelect-root",
                                  "select": "MuiSelect-select",
                                  "selectMenu": "MuiSelect-selectMenu",
                                },
                                "displayEmpty": true,
                                "labelId": undefined,
                                "multiple": false,
                                "onClose": undefined,
                                "onOpen": undefined,
                                "open": undefined,
                                "renderValue": undefined,
                                "type": undefined,
                                "variant": "standard",
                              }
                            }
                            onChange={[Function]}
                            value="2w"
                          >
                            <WithStyles(ForwardRef(InputBase))
                              classes={
                                Object {
                                  "colorSecondary": "MuiInput-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "formControl": "MuiInput-formControl",
                                  "fullWidth": "MuiInput-fullWidth",
                                  "input": "MuiInput-input",
                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInput-inputMultiline",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                  "marginDense": "MuiInput-marginDense",
                                  "multiline": "MuiInput-multiline",
                                  "root": "MuiInput-root MuiInput-underline",
                                  "underline": null,
                                }
                              }
                              fullWidth={false}
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "MenuProps": [Function],
                                    "SelectDisplayProps": [Function],
                                    "aria-label": [Function],
                                    "autoFocus": [Function],
                                    "autoWidth": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "defaultValue": [Function],
                                    "disabled": [Function],
                                    "displayEmpty": [Function],
                                    "inputRef": [Function],
                                    "labelId": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onClose": [Function],
                                    "onFocus": [Function],
                                    "onOpen": [Function],
                                    "open": [Function],
                                    "readOnly": [Function],
                                    "renderValue": [Function],
                                    "tabIndex": [Function],
                                    "type": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "MenuProps": undefined,
                                  "SelectDisplayProps": Object {
                                    "id": undefined,
                                  },
                                  "autoWidth": false,
                                  "children": Array [
                                    <WithStyles(ForwardRef(MenuItem))
                                      value="1w"
                                    >
                                      1週間毎
                                    </WithStyles(ForwardRef(MenuItem))>,
                                    <WithStyles(ForwardRef(MenuItem))
                                      value="2w"
                                    >
                                      2週間毎
                                    </WithStyles(ForwardRef(MenuItem))>,
                                    <WithStyles(ForwardRef(MenuItem))
                                      value="1m"
                                    >
                                      1ヶ月ごと
                                    </WithStyles(ForwardRef(MenuItem))>,
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "nativeInput": "MuiSelect-nativeInput",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "displayEmpty": true,
                                  "labelId": undefined,
                                  "multiple": false,
                                  "onClose": undefined,
                                  "onOpen": undefined,
                                  "open": undefined,
                                  "renderValue": undefined,
                                  "type": undefined,
                                  "variant": "standard",
                                }
                              }
                              multiline={false}
                              onChange={[Function]}
                              type="text"
                              value="2w"
                            >
                              <ForwardRef(InputBase)
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                    "adornedStart": "MuiInputBase-adornedStart",
                                    "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "focused": "Mui-focused Mui-focused",
                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                    "input": "MuiInputBase-input MuiInput-input",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                    "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                  }
                                }
                                fullWidth={false}
                                inputComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "IconComponent": [Function],
                                      "MenuProps": [Function],
                                      "SelectDisplayProps": [Function],
                                      "aria-label": [Function],
                                      "autoFocus": [Function],
                                      "autoWidth": [Function],
                                      "children": [Function],
                                      "className": [Function],
                                      "classes": [Function],
                                      "defaultValue": [Function],
                                      "disabled": [Function],
                                      "displayEmpty": [Function],
                                      "inputRef": [Function],
                                      "labelId": [Function],
                                      "multiple": [Function],
                                      "name": [Function],
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onClose": [Function],
                                      "onFocus": [Function],
                                      "onOpen": [Function],
                                      "open": [Function],
                                      "readOnly": [Function],
                                      "renderValue": [Function],
                                      "tabIndex": [Function],
                                      "type": [Function],
                                      "value": [Function],
                                      "variant": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                inputProps={
                                  Object {
                                    "IconComponent": Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    },
                                    "MenuProps": undefined,
                                    "SelectDisplayProps": Object {
                                      "id": undefined,
                                    },
                                    "autoWidth": false,
                                    "children": Array [
                                      <WithStyles(ForwardRef(MenuItem))
                                        value="1w"
                                      >
                                        1週間毎
                                      </WithStyles(ForwardRef(MenuItem))>,
                                      <WithStyles(ForwardRef(MenuItem))
                                        value="2w"
                                      >
                                        2週間毎
                                      </WithStyles(ForwardRef(MenuItem))>,
                                      <WithStyles(ForwardRef(MenuItem))
                                        value="1m"
                                      >
                                        1ヶ月ごと
                                      </WithStyles(ForwardRef(MenuItem))>,
                                    ],
                                    "classes": Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "nativeInput": "MuiSelect-nativeInput",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    },
                                    "displayEmpty": true,
                                    "labelId": undefined,
                                    "multiple": false,
                                    "onClose": undefined,
                                    "onOpen": undefined,
                                    "open": undefined,
                                    "renderValue": undefined,
                                    "type": undefined,
                                    "variant": "standard",
                                  }
                                }
                                multiline={false}
                                onChange={[Function]}
                                type="text"
                                value="2w"
                              >
                                <div
                                  className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(SelectInput)
                                    IconComponent={
                                      Object {
                                        "$$typeof": Symbol(react.memo),
                                        "compare": null,
                                        "type": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      }
                                    }
                                    SelectDisplayProps={
                                      Object {
                                        "id": undefined,
                                      }
                                    }
                                    aria-invalid={false}
                                    autoWidth={false}
                                    className="MuiInputBase-input MuiInput-input"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "filled": "MuiSelect-filled",
                                        "icon": "MuiSelect-icon",
                                        "iconFilled": "MuiSelect-iconFilled",
                                        "iconOpen": "MuiSelect-iconOpen",
                                        "iconOutlined": "MuiSelect-iconOutlined",
                                        "nativeInput": "MuiSelect-nativeInput",
                                        "outlined": "MuiSelect-outlined",
                                        "root": "MuiSelect-root",
                                        "select": "MuiSelect-select",
                                        "selectMenu": "MuiSelect-selectMenu",
                                      }
                                    }
                                    disabled={false}
                                    displayEmpty={true}
                                    inputRef={[Function]}
                                    multiple={false}
                                    onAnimationStart={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    value="2w"
                                    variant="standard"
                                  >
                                    <div
                                      aria-haspopup="listbox"
                                      className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseDown={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      2週間毎
                                    </div>
                                    <input
                                      aria-hidden={true}
                                      className="MuiSelect-nativeInput"
                                      onAnimationStart={[Function]}
                                      onChange={[Function]}
                                      required={false}
                                      tabIndex={-1}
                                      value="2w"
                                    />
                                    <ForwardRef(ArrowDropDownIcon)
                                      className="MuiSelect-icon"
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        className="MuiSelect-icon"
                                      >
                                        <ForwardRef(SvgIcon)
                                          className="MuiSelect-icon"
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root MuiSelect-icon"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M7 10l5 5 5-5z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef(ArrowDropDownIcon)>
                                    <WithStyles(ForwardRef(Menu))
                                      MenuListProps={
                                        Object {
                                          "aria-labelledby": undefined,
                                          "disableListWrap": true,
                                          "role": "listbox",
                                        }
                                      }
                                      PaperProps={
                                        Object {
                                          "style": Object {
                                            "minWidth": undefined,
                                          },
                                        }
                                      }
                                      anchorEl={
                                        <div
                                          aria-haspopup="listbox"
                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                          role="button"
                                          tabindex="0"
                                        >
                                          2週間毎
                                        </div>
                                      }
                                      id="menu-"
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Menu)
                                        MenuListProps={
                                          Object {
                                            "aria-labelledby": undefined,
                                            "disableListWrap": true,
                                            "role": "listbox",
                                          }
                                        }
                                        PaperProps={
                                          Object {
                                            "style": Object {
                                              "minWidth": undefined,
                                            },
                                          }
                                        }
                                        anchorEl={
                                          <div
                                            aria-haspopup="listbox"
                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                            role="button"
                                            tabindex="0"
                                          >
                                            2週間毎
                                          </div>
                                        }
                                        classes={
                                          Object {
                                            "list": "MuiMenu-list",
                                            "paper": "MuiMenu-paper",
                                          }
                                        }
                                        id="menu-"
                                        onClose={[Function]}
                                        open={false}
                                      >
                                        <WithStyles(ForwardRef(Popover))
                                          PaperProps={
                                            Object {
                                              "classes": Object {
                                                "root": "MuiMenu-paper",
                                              },
                                              "style": Object {
                                                "minWidth": undefined,
                                              },
                                            }
                                          }
                                          TransitionProps={
                                            Object {
                                              "onEntering": [Function],
                                            }
                                          }
                                          anchorEl={
                                            <div
                                              aria-haspopup="listbox"
                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                              role="button"
                                              tabindex="0"
                                            >
                                              2週間毎
                                            </div>
                                          }
                                          anchorOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          getContentAnchorEl={[Function]}
                                          id="menu-"
                                          onClose={[Function]}
                                          open={false}
                                          transformOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          transitionDuration="auto"
                                        >
                                          <ForwardRef(Popover)
                                            PaperProps={
                                              Object {
                                                "classes": Object {
                                                  "root": "MuiMenu-paper",
                                                },
                                                "style": Object {
                                                  "minWidth": undefined,
                                                },
                                              }
                                            }
                                            TransitionProps={
                                              Object {
                                                "onEntering": [Function],
                                              }
                                            }
                                            anchorEl={
                                              <div
                                                aria-haspopup="listbox"
                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                role="button"
                                                tabindex="0"
                                              >
                                                2週間毎
                                              </div>
                                            }
                                            anchorOrigin={
                                              Object {
                                                "horizontal": "left",
                                                "vertical": "top",
                                              }
                                            }
                                            classes={
                                              Object {
                                                "paper": "MuiPopover-paper",
                                                "root": "MuiPopover-root",
                                              }
                                            }
                                            getContentAnchorEl={[Function]}
                                            id="menu-"
                                            onClose={[Function]}
                                            open={false}
                                            transformOrigin={
                                              Object {
                                                "horizontal": "left",
                                                "vertical": "top",
                                              }
                                            }
                                            transitionDuration="auto"
                                          >
                                            <ForwardRef(Modal)
                                              BackdropProps={
                                                Object {
                                                  "invisible": true,
                                                }
                                              }
                                              className="MuiPopover-root"
                                              container={<body />}
                                              id="menu-"
                                              onClose={[Function]}
                                              open={false}
                                            />
                                          </ForwardRef(Popover)>
                                        </WithStyles(ForwardRef(Popover))>
                                      </ForwardRef(Menu)>
                                    </WithStyles(ForwardRef(Menu))>
                                  </ForwardRef(SelectInput)>
                                </div>
                              </ForwardRef(InputBase)>
                            </WithStyles(ForwardRef(InputBase))>
                          </ForwardRef(Input)>
                        </WithStyles(ForwardRef(Input))>
                      </ForwardRef(Select)>
                    </WithStyles(ForwardRef(Select))>
                  </div>
                </ForwardRef(FormControl)>
              </WithStyles(ForwardRef(FormControl))>
            </Selectbox>
          </div>
        </FormSubmitFrequency__Container>
      </div>
    </FormUserBase__Container>
  </FormUserBase>
</FormSubmitFrequency>
`;

exports[`molecule/Form/FormSubmitFrequency molecule/Form/FormSubmitFrequency-snapshot 2`] = `
<FormSubmitFrequency
  setter={[Function]}
>
  <FormUserBase
    definition="シフト提出頻度"
    item={
      <FormSubmitFrequency__Container>
        <Selectbox
          initialValue="2w"
          options={
            Array [
              Object {
                "label": "1週間毎",
                "value": "1w",
              },
              Object {
                "label": "2週間毎",
                "value": "2w",
              },
              Object {
                "label": "1ヶ月ごと",
                "value": "1m",
              },
            ]
          }
          setter={[Function]}
        />
      </FormSubmitFrequency__Container>
    }
  >
    <FormUserBase__Container>
      <div
        className="FormUserBase__Container-sc-143288g-0 krfzgn"
      >
        <FormUserBase__Title
          $position="center"
        >
          <div
            className="FormUserBase__Title-sc-143288g-1 byaPDS"
          >
            シフト提出頻度
          </div>
        </FormUserBase__Title>
        <FormSubmitFrequency__Container>
          <div
            className="FormSubmitFrequency__Container-sc-1bgjk3t-0 bGkqJD"
          >
            <Selectbox
              initialValue="2w"
              options={
                Array [
                  Object {
                    "label": "1週間毎",
                    "value": "1w",
                  },
                  Object {
                    "label": "2週間毎",
                    "value": "2w",
                  },
                  Object {
                    "label": "1ヶ月ごと",
                    "value": "1m",
                  },
                ]
              }
              setter={[Function]}
            >
              <WithStyles(ForwardRef(FormControl))
                style={
                  Object {
                    "width": "100%",
                  }
                }
              >
                <ForwardRef(FormControl)
                  classes={
                    Object {
                      "fullWidth": "MuiFormControl-fullWidth",
                      "marginDense": "MuiFormControl-marginDense",
                      "marginNormal": "MuiFormControl-marginNormal",
                      "root": "MuiFormControl-root",
                    }
                  }
                  style={
                    Object {
                      "width": "100%",
                    }
                  }
                >
                  <div
                    className="MuiFormControl-root"
                    style={
                      Object {
                        "width": "100%",
                      }
                    }
                  >
                    <WithStyles(ForwardRef(Select))
                      displayEmpty={true}
                      onChange={[Function]}
                      value="2w"
                      variant="standard"
                    >
                      <ForwardRef(Select)
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "filled": "MuiSelect-filled",
                            "icon": "MuiSelect-icon",
                            "iconFilled": "MuiSelect-iconFilled",
                            "iconOpen": "MuiSelect-iconOpen",
                            "iconOutlined": "MuiSelect-iconOutlined",
                            "nativeInput": "MuiSelect-nativeInput",
                            "outlined": "MuiSelect-outlined",
                            "root": "MuiSelect-root",
                            "select": "MuiSelect-select",
                            "selectMenu": "MuiSelect-selectMenu",
                          }
                        }
                        displayEmpty={true}
                        onChange={[Function]}
                        value="2w"
                        variant="standard"
                      >
                        <WithStyles(ForwardRef(Input))
                          inputComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "IconComponent": [Function],
                                "MenuProps": [Function],
                                "SelectDisplayProps": [Function],
                                "aria-label": [Function],
                                "autoFocus": [Function],
                                "autoWidth": [Function],
                                "children": [Function],
                                "className": [Function],
                                "classes": [Function],
                                "defaultValue": [Function],
                                "disabled": [Function],
                                "displayEmpty": [Function],
                                "inputRef": [Function],
                                "labelId": [Function],
                                "multiple": [Function],
                                "name": [Function],
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onClose": [Function],
                                "onFocus": [Function],
                                "onOpen": [Function],
                                "open": [Function],
                                "readOnly": [Function],
                                "renderValue": [Function],
                                "tabIndex": [Function],
                                "type": [Function],
                                "value": [Function],
                                "variant": [Function],
                              },
                              "render": [Function],
                            }
                          }
                          inputProps={
                            Object {
                              "IconComponent": Object {
                                "$$typeof": Symbol(react.memo),
                                "compare": null,
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                              },
                              "MenuProps": undefined,
                              "SelectDisplayProps": Object {
                                "id": undefined,
                              },
                              "autoWidth": false,
                              "children": Array [
                                <WithStyles(ForwardRef(MenuItem))
                                  value="1w"
                                >
                                  1週間毎
                                </WithStyles(ForwardRef(MenuItem))>,
                                <WithStyles(ForwardRef(MenuItem))
                                  value="2w"
                                >
                                  2週間毎
                                </WithStyles(ForwardRef(MenuItem))>,
                                <WithStyles(ForwardRef(MenuItem))
                                  value="1m"
                                >
                                  1ヶ月ごと
                                </WithStyles(ForwardRef(MenuItem))>,
                              ],
                              "classes": Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined",
                                "nativeInput": "MuiSelect-nativeInput",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              },
                              "displayEmpty": true,
                              "labelId": undefined,
                              "multiple": false,
                              "onClose": undefined,
                              "onOpen": undefined,
                              "open": undefined,
                              "renderValue": undefined,
                              "type": undefined,
                              "variant": "standard",
                            }
                          }
                          onChange={[Function]}
                          value="2w"
                        >
                          <ForwardRef(Input)
                            classes={
                              Object {
                                "colorSecondary": "MuiInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "marginDense": "MuiInput-marginDense",
                                "multiline": "MuiInput-multiline",
                                "root": "MuiInput-root",
                                "underline": "MuiInput-underline",
                              }
                            }
                            inputComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "IconComponent": [Function],
                                  "MenuProps": [Function],
                                  "SelectDisplayProps": [Function],
                                  "aria-label": [Function],
                                  "autoFocus": [Function],
                                  "autoWidth": [Function],
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "defaultValue": [Function],
                                  "disabled": [Function],
                                  "displayEmpty": [Function],
                                  "inputRef": [Function],
                                  "labelId": [Function],
                                  "multiple": [Function],
                                  "name": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onClose": [Function],
                                  "onFocus": [Function],
                                  "onOpen": [Function],
                                  "open": [Function],
                                  "readOnly": [Function],
                                  "renderValue": [Function],
                                  "tabIndex": [Function],
                                  "type": [Function],
                                  "value": [Function],
                                  "variant": [Function],
                                },
                                "render": [Function],
                              }
                            }
                            inputProps={
                              Object {
                                "IconComponent": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "MenuProps": undefined,
                                "SelectDisplayProps": Object {
                                  "id": undefined,
                                },
                                "autoWidth": false,
                                "children": Array [
                                  <WithStyles(ForwardRef(MenuItem))
                                    value="1w"
                                  >
                                    1週間毎
                                  </WithStyles(ForwardRef(MenuItem))>,
                                  <WithStyles(ForwardRef(MenuItem))
                                    value="2w"
                                  >
                                    2週間毎
                                  </WithStyles(ForwardRef(MenuItem))>,
                                  <WithStyles(ForwardRef(MenuItem))
                                    value="1m"
                                  >
                                    1ヶ月ごと
                                  </WithStyles(ForwardRef(MenuItem))>,
                                ],
                                "classes": Object {
                                  "disabled": "Mui-disabled",
                                  "filled": "MuiSelect-filled",
                                  "icon": "MuiSelect-icon",
                                  "iconFilled": "MuiSelect-iconFilled",
                                  "iconOpen": "MuiSelect-iconOpen",
                                  "iconOutlined": "MuiSelect-iconOutlined",
                                  "nativeInput": "MuiSelect-nativeInput",
                                  "outlined": "MuiSelect-outlined",
                                  "root": "MuiSelect-root",
                                  "select": "MuiSelect-select",
                                  "selectMenu": "MuiSelect-selectMenu",
                                },
                                "displayEmpty": true,
                                "labelId": undefined,
                                "multiple": false,
                                "onClose": undefined,
                                "onOpen": undefined,
                                "open": undefined,
                                "renderValue": undefined,
                                "type": undefined,
                                "variant": "standard",
                              }
                            }
                            onChange={[Function]}
                            value="2w"
                          >
                            <WithStyles(ForwardRef(InputBase))
                              classes={
                                Object {
                                  "colorSecondary": "MuiInput-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "formControl": "MuiInput-formControl",
                                  "fullWidth": "MuiInput-fullWidth",
                                  "input": "MuiInput-input",
                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInput-inputMultiline",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                  "marginDense": "MuiInput-marginDense",
                                  "multiline": "MuiInput-multiline",
                                  "root": "MuiInput-root MuiInput-underline",
                                  "underline": null,
                                }
                              }
                              fullWidth={false}
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "MenuProps": [Function],
                                    "SelectDisplayProps": [Function],
                                    "aria-label": [Function],
                                    "autoFocus": [Function],
                                    "autoWidth": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "defaultValue": [Function],
                                    "disabled": [Function],
                                    "displayEmpty": [Function],
                                    "inputRef": [Function],
                                    "labelId": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onClose": [Function],
                                    "onFocus": [Function],
                                    "onOpen": [Function],
                                    "open": [Function],
                                    "readOnly": [Function],
                                    "renderValue": [Function],
                                    "tabIndex": [Function],
                                    "type": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "MenuProps": undefined,
                                  "SelectDisplayProps": Object {
                                    "id": undefined,
                                  },
                                  "autoWidth": false,
                                  "children": Array [
                                    <WithStyles(ForwardRef(MenuItem))
                                      value="1w"
                                    >
                                      1週間毎
                                    </WithStyles(ForwardRef(MenuItem))>,
                                    <WithStyles(ForwardRef(MenuItem))
                                      value="2w"
                                    >
                                      2週間毎
                                    </WithStyles(ForwardRef(MenuItem))>,
                                    <WithStyles(ForwardRef(MenuItem))
                                      value="1m"
                                    >
                                      1ヶ月ごと
                                    </WithStyles(ForwardRef(MenuItem))>,
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "nativeInput": "MuiSelect-nativeInput",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "displayEmpty": true,
                                  "labelId": undefined,
                                  "multiple": false,
                                  "onClose": undefined,
                                  "onOpen": undefined,
                                  "open": undefined,
                                  "renderValue": undefined,
                                  "type": undefined,
                                  "variant": "standard",
                                }
                              }
                              multiline={false}
                              onChange={[Function]}
                              type="text"
                              value="2w"
                            >
                              <ForwardRef(InputBase)
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                    "adornedStart": "MuiInputBase-adornedStart",
                                    "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "focused": "Mui-focused Mui-focused",
                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                    "input": "MuiInputBase-input MuiInput-input",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                    "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                  }
                                }
                                fullWidth={false}
                                inputComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "IconComponent": [Function],
                                      "MenuProps": [Function],
                                      "SelectDisplayProps": [Function],
                                      "aria-label": [Function],
                                      "autoFocus": [Function],
                                      "autoWidth": [Function],
                                      "children": [Function],
                                      "className": [Function],
                                      "classes": [Function],
                                      "defaultValue": [Function],
                                      "disabled": [Function],
                                      "displayEmpty": [Function],
                                      "inputRef": [Function],
                                      "labelId": [Function],
                                      "multiple": [Function],
                                      "name": [Function],
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onClose": [Function],
                                      "onFocus": [Function],
                                      "onOpen": [Function],
                                      "open": [Function],
                                      "readOnly": [Function],
                                      "renderValue": [Function],
                                      "tabIndex": [Function],
                                      "type": [Function],
                                      "value": [Function],
                                      "variant": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                inputProps={
                                  Object {
                                    "IconComponent": Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    },
                                    "MenuProps": undefined,
                                    "SelectDisplayProps": Object {
                                      "id": undefined,
                                    },
                                    "autoWidth": false,
                                    "children": Array [
                                      <WithStyles(ForwardRef(MenuItem))
                                        value="1w"
                                      >
                                        1週間毎
                                      </WithStyles(ForwardRef(MenuItem))>,
                                      <WithStyles(ForwardRef(MenuItem))
                                        value="2w"
                                      >
                                        2週間毎
                                      </WithStyles(ForwardRef(MenuItem))>,
                                      <WithStyles(ForwardRef(MenuItem))
                                        value="1m"
                                      >
                                        1ヶ月ごと
                                      </WithStyles(ForwardRef(MenuItem))>,
                                    ],
                                    "classes": Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "nativeInput": "MuiSelect-nativeInput",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    },
                                    "displayEmpty": true,
                                    "labelId": undefined,
                                    "multiple": false,
                                    "onClose": undefined,
                                    "onOpen": undefined,
                                    "open": undefined,
                                    "renderValue": undefined,
                                    "type": undefined,
                                    "variant": "standard",
                                  }
                                }
                                multiline={false}
                                onChange={[Function]}
                                type="text"
                                value="2w"
                              >
                                <div
                                  className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(SelectInput)
                                    IconComponent={
                                      Object {
                                        "$$typeof": Symbol(react.memo),
                                        "compare": null,
                                        "type": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      }
                                    }
                                    SelectDisplayProps={
                                      Object {
                                        "id": undefined,
                                      }
                                    }
                                    aria-invalid={false}
                                    autoWidth={false}
                                    className="MuiInputBase-input MuiInput-input"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "filled": "MuiSelect-filled",
                                        "icon": "MuiSelect-icon",
                                        "iconFilled": "MuiSelect-iconFilled",
                                        "iconOpen": "MuiSelect-iconOpen",
                                        "iconOutlined": "MuiSelect-iconOutlined",
                                        "nativeInput": "MuiSelect-nativeInput",
                                        "outlined": "MuiSelect-outlined",
                                        "root": "MuiSelect-root",
                                        "select": "MuiSelect-select",
                                        "selectMenu": "MuiSelect-selectMenu",
                                      }
                                    }
                                    disabled={false}
                                    displayEmpty={true}
                                    inputRef={[Function]}
                                    multiple={false}
                                    onAnimationStart={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    value="2w"
                                    variant="standard"
                                  >
                                    <div
                                      aria-haspopup="listbox"
                                      className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseDown={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      2週間毎
                                    </div>
                                    <input
                                      aria-hidden={true}
                                      className="MuiSelect-nativeInput"
                                      onAnimationStart={[Function]}
                                      onChange={[Function]}
                                      required={false}
                                      tabIndex={-1}
                                      value="2w"
                                    />
                                    <ForwardRef(ArrowDropDownIcon)
                                      className="MuiSelect-icon"
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        className="MuiSelect-icon"
                                      >
                                        <ForwardRef(SvgIcon)
                                          className="MuiSelect-icon"
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root MuiSelect-icon"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M7 10l5 5 5-5z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef(ArrowDropDownIcon)>
                                    <WithStyles(ForwardRef(Menu))
                                      MenuListProps={
                                        Object {
                                          "aria-labelledby": undefined,
                                          "disableListWrap": true,
                                          "role": "listbox",
                                        }
                                      }
                                      PaperProps={
                                        Object {
                                          "style": Object {
                                            "minWidth": undefined,
                                          },
                                        }
                                      }
                                      anchorEl={
                                        <div
                                          aria-haspopup="listbox"
                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                          role="button"
                                          tabindex="0"
                                        >
                                          2週間毎
                                        </div>
                                      }
                                      id="menu-"
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Menu)
                                        MenuListProps={
                                          Object {
                                            "aria-labelledby": undefined,
                                            "disableListWrap": true,
                                            "role": "listbox",
                                          }
                                        }
                                        PaperProps={
                                          Object {
                                            "style": Object {
                                              "minWidth": undefined,
                                            },
                                          }
                                        }
                                        anchorEl={
                                          <div
                                            aria-haspopup="listbox"
                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                            role="button"
                                            tabindex="0"
                                          >
                                            2週間毎
                                          </div>
                                        }
                                        classes={
                                          Object {
                                            "list": "MuiMenu-list",
                                            "paper": "MuiMenu-paper",
                                          }
                                        }
                                        id="menu-"
                                        onClose={[Function]}
                                        open={false}
                                      >
                                        <WithStyles(ForwardRef(Popover))
                                          PaperProps={
                                            Object {
                                              "classes": Object {
                                                "root": "MuiMenu-paper",
                                              },
                                              "style": Object {
                                                "minWidth": undefined,
                                              },
                                            }
                                          }
                                          TransitionProps={
                                            Object {
                                              "onEntering": [Function],
                                            }
                                          }
                                          anchorEl={
                                            <div
                                              aria-haspopup="listbox"
                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                              role="button"
                                              tabindex="0"
                                            >
                                              2週間毎
                                            </div>
                                          }
                                          anchorOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          getContentAnchorEl={[Function]}
                                          id="menu-"
                                          onClose={[Function]}
                                          open={false}
                                          transformOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          transitionDuration="auto"
                                        >
                                          <ForwardRef(Popover)
                                            PaperProps={
                                              Object {
                                                "classes": Object {
                                                  "root": "MuiMenu-paper",
                                                },
                                                "style": Object {
                                                  "minWidth": undefined,
                                                },
                                              }
                                            }
                                            TransitionProps={
                                              Object {
                                                "onEntering": [Function],
                                              }
                                            }
                                            anchorEl={
                                              <div
                                                aria-haspopup="listbox"
                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                                role="button"
                                                tabindex="0"
                                              >
                                                2週間毎
                                              </div>
                                            }
                                            anchorOrigin={
                                              Object {
                                                "horizontal": "left",
                                                "vertical": "top",
                                              }
                                            }
                                            classes={
                                              Object {
                                                "paper": "MuiPopover-paper",
                                                "root": "MuiPopover-root",
                                              }
                                            }
                                            getContentAnchorEl={[Function]}
                                            id="menu-"
                                            onClose={[Function]}
                                            open={false}
                                            transformOrigin={
                                              Object {
                                                "horizontal": "left",
                                                "vertical": "top",
                                              }
                                            }
                                            transitionDuration="auto"
                                          >
                                            <ForwardRef(Modal)
                                              BackdropProps={
                                                Object {
                                                  "invisible": true,
                                                }
                                              }
                                              className="MuiPopover-root"
                                              container={<body />}
                                              id="menu-"
                                              onClose={[Function]}
                                              open={false}
                                            />
                                          </ForwardRef(Popover)>
                                        </WithStyles(ForwardRef(Popover))>
                                      </ForwardRef(Menu)>
                                    </WithStyles(ForwardRef(Menu))>
                                  </ForwardRef(SelectInput)>
                                </div>
                              </ForwardRef(InputBase)>
                            </WithStyles(ForwardRef(InputBase))>
                          </ForwardRef(Input)>
                        </WithStyles(ForwardRef(Input))>
                      </ForwardRef(Select)>
                    </WithStyles(ForwardRef(Select))>
                  </div>
                </ForwardRef(FormControl)>
              </WithStyles(ForwardRef(FormControl))>
            </Selectbox>
          </div>
        </FormSubmitFrequency__Container>
      </div>
    </FormUserBase__Container>
  </FormUserBase>
</FormSubmitFrequency>
`;
