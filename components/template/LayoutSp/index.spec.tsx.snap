// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LayoutSp-snapshot 1`] = `
<LayoutSp>
  <LayoutSp__Container>
    <div
      className="LayoutSp__Container-sc-1yoqtdy-0 cEIEmD"
    >
      <HeaderSp>
        <HeaderSp__Container
          position="fixed"
        >
          <WithStyles(ForwardRef(AppBar))
            className="HeaderSp__Container-sc-17orm4h-0 gKKDXh"
            position="fixed"
          >
            <ForwardRef(AppBar)
              className="HeaderSp__Container-sc-17orm4h-0 gKKDXh"
              classes={
                Object {
                  "colorDefault": "MuiAppBar-colorDefault",
                  "colorInherit": "MuiAppBar-colorInherit",
                  "colorPrimary": "MuiAppBar-colorPrimary",
                  "colorSecondary": "MuiAppBar-colorSecondary",
                  "colorTransparent": "MuiAppBar-colorTransparent",
                  "positionAbsolute": "MuiAppBar-positionAbsolute",
                  "positionFixed": "MuiAppBar-positionFixed",
                  "positionRelative": "MuiAppBar-positionRelative",
                  "positionStatic": "MuiAppBar-positionStatic",
                  "positionSticky": "MuiAppBar-positionSticky",
                  "root": "MuiAppBar-root",
                }
              }
              position="fixed"
            >
              <WithStyles(ForwardRef(Paper))
                className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary HeaderSp__Container-sc-17orm4h-0 gKKDXh mui-fixed"
                component="header"
                elevation={4}
                square={true}
              >
                <ForwardRef(Paper)
                  className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary HeaderSp__Container-sc-17orm4h-0 gKKDXh mui-fixed"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  component="header"
                  elevation={4}
                  square={true}
                >
                  <header
                    className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary HeaderSp__Container-sc-17orm4h-0 gKKDXh mui-fixed MuiPaper-elevation4"
                  >
                    <HeaderSp__SpacedToolbar
                      $isLoggedIn={false}
                      variant="dense"
                    >
                      <WithStyles(ForwardRef(Toolbar))
                        className="HeaderSp__SpacedToolbar-sc-17orm4h-1 iNglLL"
                        variant="dense"
                      >
                        <ForwardRef(Toolbar)
                          className="HeaderSp__SpacedToolbar-sc-17orm4h-1 iNglLL"
                          classes={
                            Object {
                              "dense": "MuiToolbar-dense",
                              "gutters": "MuiToolbar-gutters",
                              "regular": "MuiToolbar-regular",
                              "root": "MuiToolbar-root",
                            }
                          }
                          variant="dense"
                        >
                          <div
                            className="MuiToolbar-root MuiToolbar-dense HeaderSp__SpacedToolbar-sc-17orm4h-1 iNglLL MuiToolbar-gutters"
                          >
                            <HeaderSp__PageName>
                              <div
                                className="HeaderSp__PageName-sc-17orm4h-2 buTvHe"
                              >
                                Not Found
                              </div>
                            </HeaderSp__PageName>
                            <ButtonAvatarMenu
                              isSp={true}
                            >
                              <ButtonAvatarMenu__SpSpace>
                                <div
                                  className="ButtonAvatarMenu__SpSpace-sc-c2fxzv-2 JgtgY"
                                />
                              </ButtonAvatarMenu__SpSpace>
                              <ButtonAvatarMenu__TextButton
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(Button))
                                  className="ButtonAvatarMenu__TextButton-sc-c2fxzv-0 feUdZp"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(Button)
                                    className="ButtonAvatarMenu__TextButton-sc-c2fxzv-0 feUdZp"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiButton-colorInherit",
                                        "contained": "MuiButton-contained",
                                        "containedPrimary": "MuiButton-containedPrimary",
                                        "containedSecondary": "MuiButton-containedSecondary",
                                        "containedSizeLarge": "MuiButton-containedSizeLarge",
                                        "containedSizeSmall": "MuiButton-containedSizeSmall",
                                        "disableElevation": "MuiButton-disableElevation",
                                        "disabled": "Mui-disabled",
                                        "endIcon": "MuiButton-endIcon",
                                        "focusVisible": "Mui-focusVisible",
                                        "fullWidth": "MuiButton-fullWidth",
                                        "iconSizeLarge": "MuiButton-iconSizeLarge",
                                        "iconSizeMedium": "MuiButton-iconSizeMedium",
                                        "iconSizeSmall": "MuiButton-iconSizeSmall",
                                        "label": "MuiButton-label",
                                        "outlined": "MuiButton-outlined",
                                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                                        "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                        "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                        "root": "MuiButton-root",
                                        "sizeLarge": "MuiButton-sizeLarge",
                                        "sizeSmall": "MuiButton-sizeSmall",
                                        "startIcon": "MuiButton-startIcon",
                                        "text": "MuiButton-text",
                                        "textPrimary": "MuiButton-textPrimary",
                                        "textSecondary": "MuiButton-textSecondary",
                                        "textSizeLarge": "MuiButton-textSizeLarge",
                                        "textSizeSmall": "MuiButton-textSizeSmall",
                                      }
                                    }
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      className="MuiButton-root MuiButton-text ButtonAvatarMenu__TextButton-sc-c2fxzv-0 feUdZp"
                                      component="button"
                                      disabled={false}
                                      focusRipple={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <ForwardRef(ButtonBase)
                                        className="MuiButton-root MuiButton-text ButtonAvatarMenu__TextButton-sc-c2fxzv-0 feUdZp"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        component="button"
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName="Mui-focusVisible"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root MuiButton-root MuiButton-text ButtonAvatarMenu__TextButton-sc-c2fxzv-0 feUdZp"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiButton-label"
                                          >
                                            <ButtonAvatarMenu__StyledAvatar
                                              alt="Somebody"
                                              src="/static/images/avatar/1.jpg"
                                            >
                                              <WithStyles(ForwardRef(Avatar))
                                                alt="Somebody"
                                                className="ButtonAvatarMenu__StyledAvatar-sc-c2fxzv-1 dCcorU"
                                                src="/static/images/avatar/1.jpg"
                                              >
                                                <ForwardRef(Avatar)
                                                  alt="Somebody"
                                                  className="ButtonAvatarMenu__StyledAvatar-sc-c2fxzv-1 dCcorU"
                                                  classes={
                                                    Object {
                                                      "circle": "MuiAvatar-circle",
                                                      "circular": "MuiAvatar-circular",
                                                      "colorDefault": "MuiAvatar-colorDefault",
                                                      "fallback": "MuiAvatar-fallback",
                                                      "img": "MuiAvatar-img",
                                                      "root": "MuiAvatar-root",
                                                      "rounded": "MuiAvatar-rounded",
                                                      "square": "MuiAvatar-square",
                                                    }
                                                  }
                                                  src="/static/images/avatar/1.jpg"
                                                >
                                                  <div
                                                    className="MuiAvatar-root MuiAvatar-circular ButtonAvatarMenu__StyledAvatar-sc-c2fxzv-1 dCcorU"
                                                  >
                                                    <img
                                                      alt="Somebody"
                                                      className="MuiAvatar-img"
                                                      src="/static/images/avatar/1.jpg"
                                                    />
                                                  </div>
                                                </ForwardRef(Avatar)>
                                              </WithStyles(ForwardRef(Avatar))>
                                            </ButtonAvatarMenu__StyledAvatar>
                                          </span>
                                          <WithStyles(memo)
                                            center={false}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={false}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(Button)>
                                </WithStyles(ForwardRef(Button))>
                              </ButtonAvatarMenu__TextButton>
                              <Popper
                                anchorEl={null}
                                placement="bottom-end"
                                setShow={[Function]}
                                show={false}
                              >
                                <Popper__Container
                                  anchorEl={null}
                                  open={false}
                                  placement="bottom-end"
                                  transition={true}
                                >
                                  <ForwardRef(Popper)
                                    anchorEl={null}
                                    className="Popper__Container-sc-fo3olu-0 ibMCCu"
                                    open={false}
                                    placement="bottom-end"
                                    transition={true}
                                  />
                                </Popper__Container>
                              </Popper>
                            </ButtonAvatarMenu>
                          </div>
                        </ForwardRef(Toolbar)>
                      </WithStyles(ForwardRef(Toolbar))>
                    </HeaderSp__SpacedToolbar>
                  </header>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(AppBar)>
          </WithStyles(ForwardRef(AppBar))>
        </HeaderSp__Container>
      </HeaderSp>
    </div>
  </LayoutSp__Container>
</LayoutSp>
`;
